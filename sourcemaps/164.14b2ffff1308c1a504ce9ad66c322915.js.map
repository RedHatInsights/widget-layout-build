{"version":3,"file":"js/164.9a3e73e4d862ecccd88d.js","mappings":"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","sources":["webpack:///./src/Components/DnDLayout/GridTile.tsx","webpack:///./src/Components/Widgets/widgetTypes.ts","webpack:///./src/state/templateAtom.ts","webpack:///./src/Components/DnDLayout/GridLayout.tsx","webpack:///./src/api/dashboard-templates.ts","webpack:///./src/hooks/useLoaded.ts","webpack:///./src/hooks/useCurrentUser.ts","webpack:///./src/state/layoutAtom.ts"],"sourcesContent":["import {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Divider,\n  Dropdown,\n  DropdownItem,\n  DropdownList,\n  Flex,\n  HelperText,\n  HelperTextItem,\n  Icon,\n  MenuToggle,\n  MenuToggleElement,\n  Skeleton,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { CompressIcon, EllipsisVIcon, ExpandIcon, GripVerticalIcon, LockIcon, MinusCircleIcon, UnlockIcon } from '@patternfly/react-icons';\nimport React, { Fragment, useMemo, useState } from 'react';\nimport clsx from 'clsx';\n\nimport './GridTile.scss';\nimport { Layout } from 'react-grid-layout';\nimport { ExtendedLayoutItem, WidgetConfiguration } from '../../api/dashboard-templates';\nimport { widgetMappingAtom } from '../../state/widgetMappingAtom';\nimport { getWidget } from '../Widgets/widgetDefaults';\nimport { useAtomValue } from 'jotai';\nimport classNames from 'classnames';\nimport HeaderIcon from '../Icons/HeaderIcon';\n\nexport type SetWidgetAttribute = <T extends string | number | boolean>(id: string, attributeName: keyof ExtendedLayoutItem, value: T) => void;\n\nexport type GridTileProps = React.PropsWithChildren<{\n  widgetType: string;\n  icon?: React.ComponentClass;\n  setIsDragging: (isDragging: boolean) => void;\n  isDragging: boolean;\n  setWidgetAttribute: SetWidgetAttribute;\n  widgetConfig: Layout & {\n    colWidth: number;\n    locked?: boolean;\n    config?: WidgetConfiguration;\n  };\n  removeWidget: (id: string) => void;\n}>;\n\nconst GridTile = ({ widgetType, isDragging, setIsDragging, setWidgetAttribute, widgetConfig, removeWidget }: GridTileProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const widgetMapping = useAtomValue(widgetMappingAtom);\n  const { headerLink } = widgetConfig.config || {};\n  const hasHeader = headerLink && headerLink.href && headerLink.title;\n\n  const { node, module, scope } = useMemo(() => {\n    return getWidget(widgetMapping, widgetType, () => setIsLoaded(true));\n  }, [widgetMapping, widgetType]);\n\n  const dropdownItems = useMemo(() => {\n    const isMaximized = widgetConfig.h === widgetConfig.maxH;\n    const isMinimized = widgetConfig.h === widgetConfig.minH;\n    return (\n      <>\n        <DropdownItem\n          onClick={() => {\n            setIsOpen(false);\n            setWidgetAttribute(widgetConfig.i, 'static', !widgetConfig.static);\n          }}\n          icon={widgetConfig.static ? <UnlockIcon /> : <LockIcon />}\n        >\n          {widgetConfig.static ? 'Unlock location and size' : 'Lock location and size'}\n        </DropdownItem>\n        <DropdownItem\n          isDisabled={isMaximized || widgetConfig.static}\n          onClick={() => {\n            setWidgetAttribute(widgetConfig.i, 'h', widgetConfig.maxH ?? widgetConfig.h);\n            setIsOpen(false);\n          }}\n          icon={<ExpandIcon />}\n        >\n          Autosize height to content\n        </DropdownItem>\n        <DropdownItem\n          onClick={() => {\n            setWidgetAttribute(widgetConfig.i, 'h', widgetConfig.minH ?? widgetConfig.h);\n            setIsOpen(false);\n          }}\n          isDisabled={isMinimized || widgetConfig.static}\n          icon={<CompressIcon />}\n        >\n          Minimize height\n        </DropdownItem>\n        <DropdownItem\n          onClick={() => {\n            removeWidget(widgetConfig.i);\n          }}\n          icon={\n            <Icon className=\"pf-v5-u-pb-2xl\" status={widgetConfig.static ? undefined : 'danger'}>\n              <MinusCircleIcon />\n            </Icon>\n          }\n          isDisabled={widgetConfig.static}\n        >\n          Remove\n          <HelperText>\n            <HelperTextItem className=\"pf-v5-u-text-wrap\" variant=\"indeterminate\">\n              {\"All 'removed' widgets can be added back by clicking the 'Add widgets' button.\"}\n            </HelperTextItem>\n          </HelperText>\n        </DropdownItem>\n      </>\n    );\n  }, [widgetConfig.minH, widgetConfig.maxH, widgetConfig.h, widgetConfig.i, widgetConfig.static, setWidgetAttribute]);\n\n  const headerActions = (\n    <>\n      <Tooltip content={<p>Actions</p>}>\n        <Dropdown\n          popperProps={{\n            appendTo: document.body,\n            maxWidth: '300px',\n            position: 'right',\n          }}\n          toggle={(toggleRef: React.Ref<MenuToggleElement>) => (\n            <MenuToggle\n              ref={toggleRef}\n              isExpanded={isOpen}\n              onClick={() => setIsOpen((prev) => !prev)}\n              variant=\"plain\"\n              aria-label=\"Card title inline with images and actions example kebab toggle\"\n            >\n              <EllipsisVIcon aria-hidden=\"true\" />\n            </MenuToggle>\n          )}\n          isOpen={isOpen}\n          onOpenChange={(isOpen: boolean) => setIsOpen(isOpen)}\n        >\n          <DropdownList>{dropdownItems}</DropdownList>\n        </Dropdown>\n      </Tooltip>\n      <Tooltip content={<p>{widgetConfig.static ? 'Widget locked' : 'Move'}</p>}>\n        <Icon\n          onMouseDown={() => setIsDragging(true)}\n          onMouseUp={() => setIsDragging(false)}\n          className={clsx('drag-handle', {\n            dragging: isDragging,\n          })}\n        >\n          <GripVerticalIcon style={{ fill: '#6a6e73' }} />\n        </Icon>\n      </Tooltip>\n    </>\n  );\n\n  return (\n    <Card\n      className={clsx('grid-tile', {\n        static: widgetConfig.static,\n        [scope]: scope && module,\n      })}\n    >\n      <CardHeader actions={{ actions: headerActions }}>\n        <Flex className=\"pf-v5-u-flex-direction-row pf-v5-u-flex-nowrap\">\n          <Icon status=\"custom\" className=\"pf-v5-u-mr-sm\">\n            {isLoaded ? <HeaderIcon icon={widgetConfig?.config?.icon} /> : <Skeleton shape=\"circle\" width=\"25px\" height=\"25px\" />}\n          </Icon>\n          {isLoaded ? (\n            <CardTitle\n              style={{\n                userSelect: isDragging ? 'none' : 'auto',\n              }}\n              className=\"pf-v5-u-flex-wrap pf-v5-u-text-break-word\"\n            >\n              {widgetConfig?.config?.title || widgetType}\n            </CardTitle>\n          ) : (\n            <Skeleton width=\"50%\" />\n          )}\n          {hasHeader && isLoaded && (\n            <Button className=\"widget-header-link pf-v5-u-p-0\" variant=\"link\" onClick={() => window.open(headerLink.href, '_blank')}>\n              {headerLink.title}\n            </Button>\n          )}\n        </Flex>\n      </CardHeader>\n      <Divider />\n      <CardBody\n        className={classNames('pf-v5-u-p-0', {\n          [`${scope}-${widgetType}`]: scope && module,\n        })}\n      >\n        {node}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default GridTile;\n","import { WidgetMapping } from '../../api/dashboard-templates';\n\nexport function isWidgetType(widgetMapping: WidgetMapping, type: string): boolean {\n  return Object.keys(widgetMapping).includes(type);\n}\n","import { atom } from 'jotai';\nimport { ExtendedTemplateConfig } from '../api/dashboard-templates';\n\nexport const initialTemplate: ExtendedTemplateConfig = { sm: [], md: [], lg: [], xl: [] };\n\nexport const templateAtom = atom<ExtendedTemplateConfig>(initialTemplate);\n\nexport const templateIdAtom = atom<number>(-1);\n","import 'react-grid-layout/css/styles.css';\nimport './GridLayout.scss';\nimport { Layout, ReactGridLayoutProps, Responsive, ResponsiveProps, WidthProvider } from 'react-grid-layout';\nimport ResizeHandleIcon from './resize-handle.svg';\nimport GridTile, { SetWidgetAttribute } from './GridTile';\nimport { KeyboardEvent, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { isWidgetType } from '../Widgets/widgetTypes';\nimport { useAtom, useAtomValue } from 'jotai';\nimport { currentDropInItemAtom } from '../../state/currentDropInItemAtom';\nimport { widgetMappingAtom } from '../../state/widgetMappingAtom';\nimport { activeItemAtom, layoutAtom, layoutVariantAtom, prevLayoutAtom } from '../../state/layoutAtom';\nimport { templateAtom, templateIdAtom } from '../../state/templateAtom';\nimport React from 'react';\nimport {\n  DashboardTemplate,\n  ExtendedLayoutItem,\n  Variants,\n  getDashboardTemplates,\n  getDefaultTemplate,\n  getWidgetIdentifier,\n  mapPartialExtendedTemplateConfigToPartialTemplateConfig,\n  mapTemplateConfigToExtendedTemplateConfig,\n  patchDashboardTemplate,\n} from '../../api/dashboard-templates';\nimport useCurrentUser from '../../hooks/useCurrentUser';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { debounce, isEqual } from 'lodash';\nimport { EmptyState, EmptyStateBody, EmptyStateHeader, EmptyStateIcon, EmptyStateVariant, PageSection } from '@patternfly/react-core';\nimport { GripVerticalIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { getWidget } from '../Widgets/widgetDefaults';\n\nexport const dropping_elem_id = '__dropping-elem__';\n\nexport const breakpoints = { xl: 1100, lg: 996, md: 768, sm: 480 };\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst getResizeHandle = (resizeHandleAxis: string, ref: React.Ref<HTMLDivElement>) => {\n  return (\n    <div ref={ref} className={`react-resizable-handle react-resizable-handle-${resizeHandleAxis}`}>\n      <img src={ResizeHandleIcon} />\n    </div>\n  );\n};\n\nconst LayoutEmptyState = () => {\n  return (\n    <PageSection className=\"empty-layout pf-v5-u-p-0\">\n      <EmptyState variant={EmptyStateVariant.lg} className=\"pf-v5-u-p-sm\">\n        <EmptyStateHeader titleText=\"No dashboard content\" headingLevel=\"h2\" icon={<EmptyStateIcon icon={PlusCircleIcon} />} />\n        <EmptyStateBody>\n          You don’t have any widgets on your dashboard. To populate your dashboard, drag <GripVerticalIcon /> items from the blue widget bank to this\n          dashboard body here.\n        </EmptyStateBody>\n        {/* TODO: Add link to documentation once available [HCCDOC-2108]\n        <EmptyStateActions>\n          <Button variant=\"link\" icon={<ExternalLinkAltIcon />} iconPosition=\"end\" component=\"a\" href={`#`}>\n            Learn about your widget dashboard\n          </Button>\n        </EmptyStateActions> */}\n      </EmptyState>\n    </PageSection>\n  );\n};\n\nconst GridLayout = ({ isLayoutLocked = false }: { isLayoutLocked?: boolean }) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [isInitialRender, setIsInitialRender] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [layout, setLayout] = useAtom(layoutAtom);\n  const [prevLayout, setPrevLayout] = useAtom(prevLayoutAtom);\n  const [layoutVariant, setLayoutVariant] = useAtom(layoutVariantAtom);\n  const [template, setTemplate] = useAtom(templateAtom);\n  const [templateId, setTemplateId] = useAtom(templateIdAtom);\n  const [activeItem, setActiveItem] = useAtom(activeItemAtom);\n  const layoutRef = useRef<HTMLDivElement>(null);\n  const { currentToken } = useCurrentUser();\n  const widgetMapping = useAtomValue(widgetMappingAtom);\n  const dispatch = useDispatch();\n\n  const [currentDropInItem, setCurrentDropInItem] = useAtom(currentDropInItemAtom);\n  const droppingItemTemplate: ReactGridLayoutProps['droppingItem'] = useMemo(() => {\n    if (currentDropInItem && isWidgetType(widgetMapping, currentDropInItem)) {\n      return {\n        ...widgetMapping[currentDropInItem].defaults,\n        i: dropping_elem_id,\n        widgetType: currentDropInItem,\n        title: 'New title',\n        config: widgetMapping[currentDropInItem].config,\n      };\n    }\n  }, [currentDropInItem]);\n\n  const setWidgetAttribute: SetWidgetAttribute = (id, attributeName, value) => {\n    setLayout((prev) => prev.map((item) => (item.i === id ? { ...item, [attributeName]: value } : item)));\n  };\n\n  const removeWidget = (id: string) => {\n    setLayout((prev) => prev.filter((item) => item.i !== id));\n  };\n\n  const onDrop: ReactGridLayoutProps['onDrop'] = (_layout: ExtendedLayoutItem[], layoutItem: ExtendedLayoutItem, event: DragEvent) => {\n    const data = event.dataTransfer?.getData('text') || '';\n    // fix placement order\n    if (isWidgetType(widgetMapping, data)) {\n      const newWidget = {\n        ...layoutItem,\n        ...widgetMapping[data].defaults,\n        // w: layoutItem.x + layoutItem.w > 3 ? 1 : 3,\n        // x: 4 % layoutItem.w,\n        // x: layoutItem.x + layoutItem.w > 3 ? 3 : 0,\n        widgetType: data,\n        i: getWidgetIdentifier(data),\n        title: 'New title',\n        config: widgetMapping[data].config,\n      };\n      setCurrentDropInItem(undefined);\n      setLayout((prev) =>\n        prev.reduce<ExtendedLayoutItem[]>(\n          (acc, curr) => {\n            if (curr.x + curr.w > newWidget.x && curr.y + curr.h <= newWidget.y) {\n              acc.push(curr);\n            } else {\n              // Wee need to push the current items down on the Y axis if they are supposed to be below the new widget\n              acc.push({ ...curr, y: curr.y + curr.h });\n            }\n\n            return acc;\n          },\n          [newWidget]\n        )\n      );\n    }\n    event.preventDefault();\n  };\n\n  const activeLayout = useMemo(\n    () =>\n      layout.map((item) => ({\n        ...item,\n        locked: isLayoutLocked ? isLayoutLocked : item.locked,\n      })),\n    [isLayoutLocked, layout]\n  );\n\n  const onLayoutChange: ResponsiveProps['onLayoutChange'] = (currentLayout: Layout[]) => {\n    if (isInitialRender) {\n      setIsInitialRender(false);\n      return;\n    }\n    if (isLayoutLocked || templateId < 0 || !layoutVariant || currentDropInItem) {\n      return;\n    }\n    // TODO in certain scenarios prevLayout contains additional undefined metadata on each widget causing this check to fail and multiple patches for dropping widgets in\n    if (isEqual(prevLayout, layout)) {\n      return;\n    }\n    const data = mapPartialExtendedTemplateConfigToPartialTemplateConfig({ [layoutVariant]: currentLayout });\n    const debouncedPatchDashboardTemplate = debounce(() => {\n      patchDashboardTemplate(templateId, { templateConfig: data }, currentToken)\n        .then((template: DashboardTemplate) => {\n          const extendedTemplateConfig = mapTemplateConfigToExtendedTemplateConfig(template.templateConfig);\n          setTemplate(extendedTemplateConfig);\n          setPrevLayout(layout);\n          setLayout(extendedTemplateConfig[layoutVariant]);\n        })\n        .catch((err) => {\n          console.error(err);\n          dispatch(\n            addNotification({\n              variant: 'danger',\n              title: 'Failed to patch dashboard configuration',\n              description: 'Your dashboard changes were unable to be saved.',\n            })\n          );\n        });\n    }, 500);\n\n    debouncedPatchDashboardTemplate();\n  };\n\n  const onBreakpointChange: ResponsiveProps['onBreakpointChange'] = (newBreakpoint) => {\n    setLayoutVariant(newBreakpoint as Variants);\n  };\n\n  const onKeyUp = (event: KeyboardEvent<HTMLDivElement>, id: string) => {\n    if (event.code === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      setActiveItem((prev) => {\n        if (prev === id) {\n          return undefined;\n        }\n        return id;\n      });\n    }\n  };\n\n  const handleArrows = useCallback(\n    (e: globalThis.KeyboardEvent) => {\n      if (!activeItem) {\n        return;\n      }\n\n      const item = layout.find(({ i }) => i === activeItem);\n      if (!item) {\n        return;\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n\n      const updateLayout = (updatedItem: ExtendedLayoutItem) => {\n        setLayout((prev) => prev.map((layoutItem) => (layoutItem.i === activeItem ? updatedItem : layoutItem)));\n\n        if (isLayoutLocked || templateId < 0 || !layoutVariant || currentDropInItem) {\n          return;\n        }\n\n        const data = mapPartialExtendedTemplateConfigToPartialTemplateConfig({ [layoutVariant]: layout });\n        const debouncedPatchDashboardTemplate = debounce(() => {\n          patchDashboardTemplate(templateId, { templateConfig: data }, currentToken)\n            .then((template: DashboardTemplate) => {\n              const extendedTemplateConfig = mapTemplateConfigToExtendedTemplateConfig(template.templateConfig);\n              setTemplate(extendedTemplateConfig);\n              setPrevLayout(layout);\n              setLayout(extendedTemplateConfig[layoutVariant]);\n            })\n            .catch((err) => {\n              console.error(err);\n              dispatch(\n                addNotification({\n                  variant: 'danger',\n                  title: 'Failed to patch dashboard configuration',\n                  description: 'Your dashboard changes were unable to be saved.',\n                })\n              );\n            });\n        }, 500);\n\n        debouncedPatchDashboardTemplate();\n      };\n\n      if (e.code === 'ArrowUp') {\n        updateLayout({\n          ...item,\n          y: Math.max(item.y - 1, 0),\n        });\n      }\n\n      if (e.code === 'ArrowDown') {\n        updateLayout({\n          ...item,\n          y: item.y + 1,\n        });\n      }\n\n      if (e.code === 'ArrowLeft') {\n        updateLayout({\n          ...item,\n          x: Math.max(item.x - 1, 0),\n        });\n      }\n\n      if (e.code === 'ArrowRight') {\n        updateLayout({\n          ...item,\n          x: item.x + 1,\n        });\n      }\n    },\n    [activeItem, layout, isLayoutLocked, templateId, layoutVariant, currentDropInItem, currentToken, dispatch]\n  );\n\n  useEffect(() => {\n    if (activeItem && layoutRef.current) {\n      layoutRef.current.addEventListener('keydown', handleArrows);\n    }\n    return () => {\n      layoutRef.current?.removeEventListener('keydown', handleArrows);\n    };\n  }, [activeItem]);\n\n  useEffect(() => {\n    if (!currentToken || templateId >= 0) {\n      return;\n    }\n    // TODO template type should be pulled from app config for reusability\n    getDashboardTemplates(currentToken, 'landingPage')\n      .then((templates) => {\n        const defaultTemplate = getDefaultTemplate(templates);\n        if (!defaultTemplate) {\n          throw new Error('No default template found');\n        }\n        const extendedTemplateConfig = mapTemplateConfigToExtendedTemplateConfig(defaultTemplate.templateConfig);\n        const currentWidth = layoutRef?.current?.clientWidth || document.body.clientWidth;\n        let targetVariant: Variants;\n        if (currentWidth > breakpoints.lg) {\n          targetVariant = 'xl';\n        } else if (breakpoints.lg >= currentWidth && currentWidth > breakpoints.md) {\n          targetVariant = 'lg';\n        } else if (breakpoints.md >= currentWidth && currentWidth > breakpoints.sm) {\n          targetVariant = 'md';\n        } else {\n          targetVariant = 'sm';\n        }\n        setTemplate(extendedTemplateConfig);\n        setTemplateId(defaultTemplate.id);\n        setLayout(extendedTemplateConfig[targetVariant]);\n        setLayoutVariant(targetVariant);\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          addNotification({\n            variant: 'danger',\n            title: 'Failed to fetch dashboard template',\n            description: 'Try reloading the page.',\n          })\n        );\n      })\n      .finally(() => {\n        setIsLoaded(true);\n      });\n  }, [currentToken, templateId]);\n\n  return (\n    // {/* relative position is required for the grid layout to properly calculate\n    // child translation while dragging is in progress */}\n    <div style={{ position: 'relative' }} ref={layoutRef}>\n      {activeLayout.length === 0 && !currentDropInItem && isLoaded && <LayoutEmptyState />}\n      <ResponsiveGridLayout\n        className=\"layout\"\n        draggableHandle=\".drag-handle\"\n        layouts={template}\n        breakpoints={breakpoints}\n        cols={{ xl: 4, lg: 3, md: 2, sm: 1 }}\n        rowHeight={88}\n        //width={1200}\n        isDraggable={!isLayoutLocked}\n        isResizable={!isLayoutLocked}\n        resizeHandle={getResizeHandle}\n        containerPadding={{ xl: [0, 0], lg: [0, 0], md: [0, 0], sm: [0, 0] }}\n        margin={{ xl: [16, 16], lg: [16, 16], md: [16, 16], sm: [16, 16] }}\n        resizeHandles={['sw', 'nw', 'se', 'ne']}\n        // add droppping item default based on dragged template\n        droppingItem={droppingItemTemplate}\n        isDroppable={!isLayoutLocked}\n        onDrop={onDrop}\n        useCSSTransforms\n        verticalCompact\n        onLayoutChange={onLayoutChange}\n        onBreakpointChange={onBreakpointChange}\n      >\n        {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          activeLayout.map(({ widgetType, title, ...rest }, index) => {\n            const { config } = getWidget(widgetMapping, widgetType);\n            return (\n              <div\n                key={rest.i}\n                data-grid={rest}\n                onKeyUp={(e) => onKeyUp(e, rest.i)}\n                tabIndex={index}\n                style={{\n                  boxShadow: activeItem === rest.i ? '0 0 2px 2px #2684FF' : 'none',\n                  ...(activeItem === rest.i ? { outline: 'none' } : {}),\n                }}\n                className={`widget-columns-${rest.w}`}\n              >\n                <GridTile\n                  isDragging={isDragging}\n                  setIsDragging={setIsDragging}\n                  widgetType={widgetType}\n                  // these will be dynamically calculated once the dimensions are calculated\n                  widgetConfig={{ ...rest, colWidth: 1200 / 4, config }}\n                  setWidgetAttribute={setWidgetAttribute}\n                  removeWidget={removeWidget}\n                >\n                  {rest.i}\n                </GridTile>\n              </div>\n            );\n          })\n        }\n      </ResponsiveGridLayout>\n    </div>\n  );\n};\n\nexport default GridLayout;\n","import { Layout } from 'react-grid-layout';\nimport { dropping_elem_id } from '../Components/DnDLayout/GridLayout';\nimport { ScalprumComponentProps } from '@scalprum/react-core';\n\nconst getRequestHeaders = (token: string) => ({\n  Accept: 'application/json',\n  Authorization: `Bearer ${token}`,\n  'Content-Type': 'application/json',\n});\n\nexport const widgetIdSeparator = '#';\n\nexport type LayoutTypes = 'landingPage';\n\nexport type Variants = 'sm' | 'md' | 'lg' | 'xl';\n\nexport type LayoutWithTitle = Layout & { title: string };\n\nexport type TemplateConfig = {\n  [k in Variants]: LayoutWithTitle[];\n};\n\nexport type PartialTemplateConfig = Partial<TemplateConfig>;\n\n// extended type the UI tracks but not the backend\nexport type ExtendedLayoutItem = LayoutWithTitle & {\n  widgetType: string;\n  config?: WidgetConfiguration;\n  locked?: boolean;\n};\n\n// extended type the UI tracks but not the backend\nexport type ExtendedTemplateConfig = {\n  [k in Variants]: ExtendedLayoutItem[];\n};\n\n// extended type the UI tracks but not the backend\nexport type PartialExtendedTemplateConfig = Partial<ExtendedTemplateConfig>;\n\nexport type BaseTemplate = {\n  name: string;\n  displayName: string;\n  templateConfig: TemplateConfig;\n};\n\nexport type DashboardTemplate = {\n  id: number;\n  createdAt: string;\n  updatedAt: string;\n  deletedAt: string | null;\n  userIdentityID: number;\n  default: boolean;\n  TemplateBase: {\n    name: string;\n    displayName: string;\n  };\n  templateConfig: TemplateConfig;\n};\n\n// TODO use dynamic-plugin-sdk CustomError as base class instead\nexport class DashboardTemplatesError extends Error {\n  constructor(message: string, readonly status: number, readonly response: Response) {\n    super(message);\n\n    Object.defineProperty(this, 'name', {\n      value: new.target.name,\n      configurable: true,\n    });\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n  }\n}\n\nexport type WidgetDefaults = {\n  w: number;\n  h: number;\n  maxH: number;\n  minH: number;\n};\n\nexport type WidgetHeaderLink = {\n  title?: string;\n  href?: string;\n};\n\nexport type WidgetConfiguration = {\n  icon?: string;\n  headerLink?: WidgetHeaderLink;\n  title?: string;\n};\n\nexport type WidgetMapping = {\n  [key: string]: Pick<ScalprumComponentProps, 'scope' | 'module' | 'importName'> & {\n    defaults: WidgetDefaults;\n    config?: WidgetConfiguration;\n  };\n};\n\nconst handleErrors = (resp: Response) => {\n  if (!resp.ok) {\n    throw new DashboardTemplatesError('chrome-service dashboard-templates API fetch error', resp.status, resp);\n  }\n};\n\nexport const getWidgetIdentifier = (widgetType: string, uniqueId: string = crypto.randomUUID()) => {\n  return `${widgetType}${widgetIdSeparator}${uniqueId}`;\n};\n\nexport async function getBaseDashboardTemplate(token: string): Promise<BaseTemplate[]>;\nexport async function getBaseDashboardTemplate(token: string, type: LayoutTypes): Promise<BaseTemplate>;\nexport async function getBaseDashboardTemplate(token: string, type?: LayoutTypes): Promise<BaseTemplate | BaseTemplate[]> {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates/base-template${type ? `?dashboard=${type}` : ''}`, {\n    method: 'GET',\n    headers: getRequestHeaders(token),\n  });\n  handleErrors(resp);\n  const json = await resp.json();\n  return json.data;\n}\n\n// Returns multiple templates for a user (user can have multiple template copies) - we will render the one marked default: true by default\nexport async function getDashboardTemplates(token: string): Promise<DashboardTemplate[]>;\nexport async function getDashboardTemplates(token: string, type: LayoutTypes): Promise<DashboardTemplate[]>;\nexport async function getDashboardTemplates(token: string, type?: LayoutTypes): Promise<DashboardTemplate | DashboardTemplate[]> {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates${type ? `?dashboard=${type}` : ''}`, {\n    method: 'GET',\n    headers: getRequestHeaders(token),\n  });\n  handleErrors(resp);\n  const json = await resp.json();\n  return json.data;\n}\n\nexport async function getWidgetMapping(token: string): Promise<WidgetMapping> {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates/widget-mapping`, {\n    method: 'GET',\n    headers: getRequestHeaders(token),\n  });\n  handleErrors(resp);\n  const json = await resp.json();\n  return json.data;\n}\n\nexport const patchDashboardTemplate = async (\n  templateId: DashboardTemplate['id'],\n  data: { templateConfig: PartialTemplateConfig },\n  token: string\n): Promise<DashboardTemplate> => {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates/${templateId}`, {\n    method: 'PATCH',\n    headers: getRequestHeaders(token),\n    body: JSON.stringify(data),\n  });\n  handleErrors(resp);\n  const json = await resp.json();\n  return json.data;\n};\n\nexport const deleteDashboardTemplate = async (templateId: DashboardTemplate['id'], token: string): Promise<boolean> => {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates/${templateId}`, {\n    method: 'DELETE',\n    headers: getRequestHeaders(token),\n  });\n  handleErrors(resp);\n  return resp.status === 204;\n};\n\nexport const getDefaultTemplate = (templates: DashboardTemplate[]): DashboardTemplate | undefined => {\n  return templates.find((itm) => itm.default === true);\n};\n\nexport const mapWidgetDefaults = (id: string): [string, string] => {\n  const [widgetType, i] = id.split(widgetIdSeparator);\n  return [widgetType, i];\n};\n\nexport const mapLayoutWithTitleToExtendedLayout = (layoutWithTitle: LayoutWithTitle): ExtendedLayoutItem => {\n  return {\n    ...layoutWithTitle,\n    widgetType: mapWidgetDefaults(layoutWithTitle.i)[0],\n  };\n};\n\nexport const mapTemplateConfigToExtendedTemplateConfig = (templateConfig: TemplateConfig): ExtendedTemplateConfig => {\n  const result: ExtendedTemplateConfig = { sm: [], md: [], lg: [], xl: [] };\n  (Object.keys(templateConfig) as Variants[]).forEach((key) => {\n    result[key] = templateConfig[key].map(mapLayoutWithTitleToExtendedLayout);\n  });\n  return result;\n};\n\nexport const mapExtendedLayoutToLayoutWithTitle = (extendedLayoutItem: ExtendedLayoutItem): LayoutWithTitle => {\n  const { x, y, h, i, w, title, maxH, minH, static: isStatic } = extendedLayoutItem;\n  return { x, y, h, i, w, title, maxH, minH, static: isStatic };\n};\n\nexport const mapExtendedTemplateConfigToTemplateConfig = (extendedTemplateConfig: ExtendedTemplateConfig): TemplateConfig => {\n  const result: TemplateConfig = { sm: [], md: [], lg: [], xl: [] };\n  (Object.keys(extendedTemplateConfig) as Variants[]).forEach((key) => {\n    result[key] = extendedTemplateConfig[key].map(mapExtendedLayoutToLayoutWithTitle).filter(({ i }) => i !== dropping_elem_id);\n  });\n  return result;\n};\n\nexport const mapPartialExtendedTemplateConfigToPartialTemplateConfig = (\n  extendedTemplateConfig: PartialExtendedTemplateConfig\n): PartialTemplateConfig => {\n  const result: PartialTemplateConfig = {};\n  (Object.keys(extendedTemplateConfig) as Variants[]).forEach((key) => {\n    result[key] = extendedTemplateConfig[key]?.map(mapExtendedLayoutToLayoutWithTitle).filter(({ i }) => i !== dropping_elem_id);\n  });\n  return result;\n};\n","import { useEffect, useState } from 'react';\n\nconst useLoaded = (loader: () => Promise<void>) => {\n  const [isLoaded, setLoaded] = useState(false);\n  useEffect(() => {\n    (async () => {\n      await loader();\n      setLoaded(true);\n    })();\n  }, []);\n\n  return isLoaded;\n};\n\nexport default useLoaded;\n","import { useState } from 'react';\nimport useLoaded from './useLoaded';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { ChromeUser } from '@redhat-cloud-services/types';\n\nconst useCurrentUser = () => {\n  const [currentUser, setCurrentUser] = useState<ChromeUser['identity']['user']>(undefined);\n  const [currentToken, setCurrentToken] = useState<string>('');\n  const chrome = useChrome();\n\n  const isLoaded = useLoaded(async () => {\n    const user = await chrome.auth.getUser();\n    if (user) {\n      setCurrentUser(user.identity.user);\n    }\n    const token = await chrome.auth.getToken();\n    if (token) {\n      setCurrentToken(token);\n    }\n  });\n\n  return {\n    isLoaded,\n    currentUser,\n    currentToken,\n  };\n};\n\nexport default useCurrentUser;\n","import { isEqual } from 'lodash';\nimport { atom } from 'jotai';\nimport { ExtendedLayoutItem, Variants } from '../api/dashboard-templates';\n\nexport const initialLayout: ExtendedLayoutItem[] = [];\n\nexport function isDefaultLayout(layout: ExtendedLayoutItem[]) {\n  return isEqual(initialLayout, layout);\n}\n\nexport const layoutVariantAtom = atom<Variants>('xl');\n\nexport const layoutAtom = atom<ExtendedLayoutItem[]>(initialLayout);\n\nexport const prevLayoutAtom = atom<ExtendedLayoutItem[]>(initialLayout);\n\nexport const activeItemAtom = atom<string | undefined>(undefined);\n"],"names":["widgetType","isDragging","setIsDragging","setWidgetAttribute","widgetConfig","removeWidget","useState","isOpen","setIsOpen","isLoaded","setIsLoaded","widgetMapping","useAtomValue","widgetMappingAtom","headerLink","config","hasHeader","href","title","useMemo","node","module","scope","dropdownItems","isMaximized","h","maxH","isMinimized","minH","DropdownItem","onClick","i","static","icon","isDisabled","Icon","className","status","undefined","HelperText","HelperTextItem","variant","headerActions","Tooltip","content","Dropdown","popperProps","appendTo","document","body","maxWidth","position","toggle","toggleRef","MenuToggle","ref","isExpanded","prev","onOpenChange","DropdownList","onMouseDown","onMouseUp","clsx","c","dragging","style","fill","Card","CardHeader","actions","Flex","HeaderIcon","Skeleton","shape","width","height","CardTitle","userSelect","Button","window","open","Divider","CardBody","isWidgetType","type","Object","keys","includes","templateAtom","atom","sm","md","lg","xl","templateIdAtom","dropping_elem_id","breakpoints","ResponsiveGridLayout","WidthProvider","Responsive","getResizeHandle","resizeHandleAxis","src","LayoutEmptyState","PageSection","EmptyState","EmptyStateVariant","EmptyStateHeader","titleText","headingLevel","EmptyStateIcon","EmptyStateBody","isLayoutLocked","isInitialRender","setIsInitialRender","useAtom","layoutAtom","layout","setLayout","prevLayout","setPrevLayout","layoutVariant","setLayoutVariant","template","setTemplate","templateId","setTemplateId","activeItem","setActiveItem","layoutRef","useRef","currentToken","useCurrentUser","dispatch","useDispatch","currentDropInItemAtom","currentDropInItem","setCurrentDropInItem","droppingItemTemplate","defaults","id","attributeName","value","map","item","filter","activeLayout","locked","handleArrows","useCallback","e","find","stopPropagation","preventDefault","updateLayout","updatedItem","layoutItem","data","debouncedPatchDashboardTemplate","debounce","templateConfig","then","extendedTemplateConfig","catch","err","console","error","description","code","y","Math","max","x","useEffect","current","addEventListener","removeEventListener","templates","defaultTemplate","Error","targetVariant","currentWidth","clientWidth","log","finally","length","draggableHandle","layouts","cols","rowHeight","isDraggable","isResizable","resizeHandle","containerPadding","margin","resizeHandles","droppingItem","isDroppable","onDrop","_layout","event","dataTransfer","getData","reduce","acc","curr","w","push","useCSSTransforms","verticalCompact","onLayoutChange","currentLayout","isEqual","onBreakpointChange","newBreakpoint","index","rest","key","onKeyUp","tabIndex","boxShadow","outline","colWidth","getRequestHeaders","token","Accept","Authorization","message","response","defineProperty","name","configurable","captureStackTrace","constructor","stack","handleErrors","resp","ok","DashboardTemplatesError","getWidgetIdentifier","uniqueId","crypto","randomUUID","getDashboardTemplates","Promise","fetch","method","headers","json","getWidgetMapping","patchDashboardTemplate","JSON","stringify","getDefaultTemplate","itm","default","mapLayoutWithTitleToExtendedLayout","layoutWithTitle","split","mapTemplateConfigToExtendedTemplateConfig","result","forEach","mapExtendedLayoutToLayoutWithTitle","extendedLayoutItem","mapPartialExtendedTemplateConfigToPartialTemplateConfig","loader","setLoaded","currentUser","setCurrentUser","setCurrentToken","chrome","useChrome","auth","getUser","user","identity","getToken","initialLayout","isDefaultLayout","layoutVariantAtom","prevLayoutAtom","activeItemAtom"],"sourceRoot":""}