{"version":3,"file":"js/420.75749395885a606f8815.js","mappings":"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","sources":["webpack:///./src/Components/Widgets/widgetMapper.ts","webpack:///./src/Components/DnDLayout/GridTile.tsx","webpack:///./src/Components/Widgets/widgetDefaults.ts","webpack:///./src/state/templateAtom.ts","webpack:///./src/api/dashboard-templates.ts","webpack:///./src/Components/DnDLayout/GridLayout.tsx","webpack:///./src/Components/Widgets/LargeWidget.tsx","webpack:///./src/Components/Widgets/MediumWidget.tsx","webpack:///./src/Components/Widgets/SmallWidget.tsx","webpack:///./src/Components/Widgets/widgetTypes.ts","webpack:///./src/hooks/useLoaded.ts","webpack:///./src/hooks/useCurrentUser.ts","webpack:///./src/state/currentDropInItemAtom.ts","webpack:///./src/state/layoutAtom.ts"],"sourcesContent":["import React from 'react';\nimport LargeWidget from './LargeWidget';\nimport { WidgetTypes } from './widgetTypes';\nimport MediumWidget from './MediumWidget';\nimport SmallWidget from './SmallWidget';\n\nconst widgetMapper: {\n  [widgetName in WidgetTypes]: React.ComponentType<React.PropsWithChildren<object>>;\n} = {\n  [WidgetTypes.LargeWidget]: LargeWidget,\n  [WidgetTypes.MediumWidget]: MediumWidget,\n  [WidgetTypes.SmallWidget]: SmallWidget,\n};\n\nexport default widgetMapper;\n","import {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Divider,\n  Dropdown,\n  DropdownItem,\n  DropdownList,\n  Flex,\n  HelperText,\n  HelperTextItem,\n  Icon,\n  MenuToggle,\n  MenuToggleElement,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { CompressIcon, EllipsisVIcon, ExpandIcon, GripVerticalIcon, LockIcon, MinusCircleIcon, UnlockIcon } from '@patternfly/react-icons';\nimport React, { Fragment, useMemo, useState } from 'react';\nimport clsx from 'clsx';\n\nimport './GridTile.scss';\nimport { Layout } from 'react-grid-layout';\nimport { WidgetTypes } from '../Widgets/widgetTypes';\nimport widgetMapper from '../Widgets/widgetMapper';\nimport { ExtendedLayoutItem } from '../../api/dashboard-templates';\n\nimport { BaconIcon } from '@patternfly/react-icons';\n\nexport type SetWidgetAttribute = <T extends string | number | boolean>(id: string, attributeName: keyof ExtendedLayoutItem, value: T) => void;\n\nexport type GridTileProps = React.PropsWithChildren<{\n  widgetType: WidgetTypes;\n  title: string;\n  setIsDragging: (isDragging: boolean) => void;\n  isDragging: boolean;\n  setWidgetAttribute: SetWidgetAttribute;\n  widgetConfig: Layout & {\n    colWidth: number;\n    locked?: boolean;\n  };\n  removeWidget: (id: string) => void;\n}>;\n\nconst GridTile = ({ widgetType, title, isDragging, setIsDragging, setWidgetAttribute, widgetConfig, removeWidget }: GridTileProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const Component = widgetMapper[widgetType] || Fragment;\n\n  const dropdownItems = useMemo(() => {\n    const isMaximized = widgetConfig.h === widgetConfig.maxH;\n    const isMinimized = widgetConfig.h === widgetConfig.minH;\n    return (\n      <>\n        <DropdownItem\n          onClick={() => {\n            setIsOpen(false);\n            setWidgetAttribute(widgetConfig.i, 'static', !widgetConfig.static);\n          }}\n          icon={widgetConfig.static ? <UnlockIcon /> : <LockIcon />}\n        >\n          {widgetConfig.static ? 'Unlock location and size' : 'Lock location and size'}\n        </DropdownItem>\n        <DropdownItem\n          isDisabled={isMaximized || widgetConfig.static}\n          onClick={() => {\n            setWidgetAttribute(widgetConfig.i, 'h', widgetConfig.maxH ?? widgetConfig.h);\n            setIsOpen(false);\n          }}\n          icon={<ExpandIcon />}\n        >\n          Autosize height to content\n        </DropdownItem>\n        <DropdownItem\n          onClick={() => {\n            setWidgetAttribute(widgetConfig.i, 'h', widgetConfig.minH ?? widgetConfig.h);\n            setIsOpen(false);\n          }}\n          isDisabled={isMinimized || widgetConfig.static}\n          icon={<CompressIcon />}\n        >\n          Minimize height\n        </DropdownItem>\n        <DropdownItem\n          onClick={() => {\n            removeWidget(widgetConfig.i);\n          }}\n          icon={\n            <Icon className=\"pf-v5-u-pb-2xl\" status={widgetConfig.static ? undefined : 'danger'}>\n              <MinusCircleIcon />\n            </Icon>\n          }\n          isDisabled={widgetConfig.static}\n        >\n          Remove\n          <HelperText>\n            <HelperTextItem className=\"pf-v5-u-text-wrap\" variant=\"indeterminate\">\n              {\"All 'removed' widgets can be added back by clicking the 'Add widgets' button.\"}\n            </HelperTextItem>\n          </HelperText>\n        </DropdownItem>\n      </>\n    );\n  }, [widgetConfig.minH, widgetConfig.maxH, widgetConfig.h, widgetConfig.i, widgetConfig.static, setWidgetAttribute]);\n\n  const headerActions = (\n    <>\n      <Tooltip content={<p>Actions</p>}>\n        <Dropdown\n          popperProps={{\n            appendTo: document.body,\n            maxWidth: '300px',\n            position: 'right',\n          }}\n          toggle={(toggleRef: React.Ref<MenuToggleElement>) => (\n            <MenuToggle\n              ref={toggleRef}\n              isExpanded={isOpen}\n              onClick={() => setIsOpen((prev) => !prev)}\n              variant=\"plain\"\n              aria-label=\"Card title inline with images and actions example kebab toggle\"\n            >\n              <EllipsisVIcon aria-hidden=\"true\" />\n            </MenuToggle>\n          )}\n          isOpen={isOpen}\n          onOpenChange={(isOpen: boolean) => setIsOpen(isOpen)}\n        >\n          <DropdownList>{dropdownItems}</DropdownList>\n        </Dropdown>\n      </Tooltip>\n      <Tooltip content={<p>{widgetConfig.static ? 'Widget locked' : 'Move'}</p>}>\n        <Icon\n          onMouseDown={() => setIsDragging(true)}\n          onMouseUp={() => setIsDragging(false)}\n          className={clsx('drag-handle', {\n            dragging: isDragging,\n          })}\n        >\n          <GripVerticalIcon style={{ fill: '#6a6e73' }} />\n        </Icon>\n      </Tooltip>\n    </>\n  );\n\n  return (\n    <Card\n      className={clsx('grid-tile', {\n        static: widgetConfig.static,\n      })}\n    >\n      <CardHeader actions={{ actions: headerActions }}>\n        <Flex className=\"pf-v5-u-flex-direction-row pf-v5-u-flex-nowrap\">\n          <Icon status=\"custom\" className=\"pf-v5-u-mr-sm\">\n            <BaconIcon />\n          </Icon>\n          <CardTitle\n            style={{\n              userSelect: isDragging ? 'none' : 'auto',\n            }}\n            className=\"pf-v5-u-flex-wrap pf-v5-u-text-break-word\"\n          >\n            {title}\n          </CardTitle>\n        </Flex>\n      </CardHeader>\n      <Divider />\n      <CardBody className=\"pf-v5-u-p-0\">\n        <Component></Component>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default GridTile;\n","import { WidgetTypes } from './widgetTypes';\n\nexport const widgetDefaultWidth: { [widgetName in WidgetTypes]: number } = {\n  [WidgetTypes.LargeWidget]: 4,\n  [WidgetTypes.MediumWidget]: 2,\n  [WidgetTypes.SmallWidget]: 1,\n};\n\nexport const widgetDefaultHeight: { [widgetName in WidgetTypes]: number } = {\n  [WidgetTypes.LargeWidget]: 3,\n  [WidgetTypes.MediumWidget]: 2,\n  [WidgetTypes.SmallWidget]: 1,\n};\n\n// these will depend entirely on widget implementation\nexport const widgetMaxHeight: { [widgetName in WidgetTypes]: number } = {\n  [WidgetTypes.LargeWidget]: 6,\n  [WidgetTypes.MediumWidget]: 4,\n  [WidgetTypes.SmallWidget]: 2,\n};\n\nexport const widgetMinHeight: { [widgetName in WidgetTypes]: number } = {\n  [WidgetTypes.LargeWidget]: 1,\n  [WidgetTypes.MediumWidget]: 1,\n  [WidgetTypes.SmallWidget]: 1,\n};\n","import { atom } from 'jotai';\nimport { ExtendedTemplateConfig } from '../api/dashboard-templates';\n\nexport const initialTemplate: ExtendedTemplateConfig = { sm: [], md: [], lg: [], xl: [] };\n\nexport const templateAtom = atom<ExtendedTemplateConfig>(initialTemplate);\n\nexport const templateIdAtom = atom<number>(-1);\n","import { Layout } from 'react-grid-layout';\nimport { WidgetTypes } from '../Components/Widgets/widgetTypes';\nimport { dropping_elem_id } from '../Components/DnDLayout/GridLayout';\n\nconst getRequestHeaders = (token: string) => ({\n  Accept: 'application/json',\n  Authorization: `Bearer ${token}`,\n  'Content-Type': 'application/json',\n});\n\nexport type LayoutTypes = 'landingPage';\n\nexport type Variants = 'sm' | 'md' | 'lg' | 'xl';\n\nexport type LayoutWithTitle = Layout & { title: string };\n\nexport type TemplateConfig = {\n  [k in Variants]: LayoutWithTitle[];\n};\n\nexport type PartialTemplateConfig = Partial<TemplateConfig>;\n\n// extended type the UI tracks but not the backend\nexport type ExtendedLayoutItem = LayoutWithTitle & {\n  widgetType: WidgetTypes;\n  locked?: boolean;\n};\n\n// extended type the UI tracks but not the backend\nexport type ExtendedTemplateConfig = {\n  [k in Variants]: ExtendedLayoutItem[];\n};\n\n// extended type the UI tracks but not the backend\nexport type PartialExtendedTemplateConfig = Partial<ExtendedTemplateConfig>;\n\nexport type BaseTemplate = {\n  name: string;\n  displayName: string;\n  templateConfig: TemplateConfig;\n};\n\nexport type DashboardTemplate = {\n  id: number;\n  createdAt: string;\n  updatedAt: string;\n  deletedAt: string | null;\n  userIdentityID: number;\n  default: boolean;\n  TemplateBase: {\n    name: string;\n    displayName: string;\n  };\n  templateConfig: TemplateConfig;\n};\n\n// TODO use dynamic-plugin-sdk CustomError as base class instead\nexport class DashboardTemplatesError extends Error {\n  constructor(message: string, readonly status: number, readonly response: Response) {\n    super(message);\n\n    Object.defineProperty(this, 'name', {\n      value: new.target.name,\n      configurable: true,\n    });\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n  }\n}\n\nconst handleErrors = (resp: Response) => {\n  if (!resp.ok) {\n    throw new DashboardTemplatesError('chrome-service dashboard-templates API fetch error', resp.status, resp);\n  }\n};\n\nexport async function getBaseDashboardTemplate(token: string): Promise<BaseTemplate[]>;\nexport async function getBaseDashboardTemplate(token: string, type: LayoutTypes): Promise<BaseTemplate>;\nexport async function getBaseDashboardTemplate(token: string, type?: LayoutTypes): Promise<BaseTemplate | BaseTemplate[]> {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates/base-template${type ? `?dashboard=${type}` : ''}`, {\n    method: 'GET',\n    headers: getRequestHeaders(token),\n  });\n  handleErrors(resp);\n  const json = await resp.json();\n  return json.data;\n}\n\n// Returns multiple templates for a user (user can have multiple template copies) - we will render the one marked default: true by default\nexport async function getDashboardTemplates(token: string): Promise<DashboardTemplate[]>;\nexport async function getDashboardTemplates(token: string, type: LayoutTypes): Promise<DashboardTemplate[]>;\nexport async function getDashboardTemplates(token: string, type?: LayoutTypes): Promise<DashboardTemplate | DashboardTemplate[]> {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates${type ? `?dashboard=${type}` : ''}`, {\n    method: 'GET',\n    headers: getRequestHeaders(token),\n  });\n  handleErrors(resp);\n  const json = await resp.json();\n  return json.data;\n}\n\nexport const patchDashboardTemplate = async (\n  templateId: DashboardTemplate['id'],\n  data: { templateConfig: PartialTemplateConfig },\n  token: string\n): Promise<DashboardTemplate> => {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates/${templateId}`, {\n    method: 'PATCH',\n    headers: getRequestHeaders(token),\n    body: JSON.stringify(data),\n  });\n  handleErrors(resp);\n  const json = await resp.json();\n  return json.data;\n};\n\nexport const deleteDashboardTemplate = async (templateId: DashboardTemplate['id'], token: string): Promise<boolean> => {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates/${templateId}`, {\n    method: 'DELETE',\n    headers: getRequestHeaders(token),\n  });\n  handleErrors(resp);\n  return resp.status === 204;\n};\n\nexport const getDefaultTemplate = (templates: DashboardTemplate[]): DashboardTemplate | undefined => {\n  return templates.find((itm) => itm.default === true);\n};\n\nexport const mapWidgetDefaults = (id: string): [WidgetTypes, string] => {\n  const [widgetType, i] = id.split('#');\n  // we will need some type guards here and schema validation to remove unknown widgets\n  return [widgetType as WidgetTypes, i];\n};\n\nexport const mapLayoutWithTitleToExtendedLayout = (layoutWithTitle: LayoutWithTitle): ExtendedLayoutItem => {\n  return {\n    ...layoutWithTitle,\n    widgetType: mapWidgetDefaults(layoutWithTitle.i)[0],\n  };\n};\n\nexport const mapTemplateConfigToExtendedTemplateConfig = (templateConfig: TemplateConfig): ExtendedTemplateConfig => {\n  const result: ExtendedTemplateConfig = { sm: [], md: [], lg: [], xl: [] };\n  (Object.keys(templateConfig) as Variants[]).forEach((key) => {\n    result[key] = templateConfig[key].map(mapLayoutWithTitleToExtendedLayout);\n  });\n  return result;\n};\n\nexport const mapExtendedLayoutToLayoutWithTitle = (extendedLayoutItem: ExtendedLayoutItem): LayoutWithTitle => {\n  const { x, y, h, i, w, title, maxH, minH, static: isStatic } = extendedLayoutItem;\n  return { x, y, h, i, w, title, maxH, minH, static: isStatic };\n};\n\nexport const mapExtendedTemplateConfigToTemplateConfig = (extendedTemplateConfig: ExtendedTemplateConfig): TemplateConfig => {\n  const result: TemplateConfig = { sm: [], md: [], lg: [], xl: [] };\n  (Object.keys(extendedTemplateConfig) as Variants[]).forEach((key) => {\n    result[key] = extendedTemplateConfig[key].map(mapExtendedLayoutToLayoutWithTitle).filter(({ i }) => i !== dropping_elem_id);\n  });\n  return result;\n};\n\nexport const mapPartialExtendedTemplateConfigToPartialTemplateConfig = (\n  extendedTemplateConfig: PartialExtendedTemplateConfig\n): PartialTemplateConfig => {\n  const result: PartialTemplateConfig = {};\n  (Object.keys(extendedTemplateConfig) as Variants[]).forEach((key) => {\n    result[key] = extendedTemplateConfig[key]?.map(mapExtendedLayoutToLayoutWithTitle).filter(({ i }) => i !== dropping_elem_id);\n  });\n  return result;\n};\n","import 'react-grid-layout/css/styles.css';\nimport './GridLayout.scss';\nimport { Layout, ReactGridLayoutProps, Responsive, ResponsiveProps, WidthProvider } from 'react-grid-layout';\nimport ResizeHandleIcon from './resize-handle.svg';\nimport GridTile, { SetWidgetAttribute } from './GridTile';\nimport { KeyboardEvent, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { isWidgetType } from '../Widgets/widgetTypes';\nimport { widgetDefaultHeight, widgetDefaultWidth, widgetMaxHeight, widgetMinHeight } from '../Widgets/widgetDefaults';\nimport { useAtom } from 'jotai';\nimport { currentDropInItemAtom } from '../../state/currentDropInItemAtom';\nimport { activeItemAtom, layoutAtom, layoutVariantAtom, prevLayoutAtom } from '../../state/layoutAtom';\nimport { templateAtom, templateIdAtom } from '../../state/templateAtom';\nimport React from 'react';\nimport {\n  DashboardTemplate,\n  ExtendedLayoutItem,\n  Variants,\n  getDashboardTemplates,\n  getDefaultTemplate,\n  mapPartialExtendedTemplateConfigToPartialTemplateConfig,\n  mapTemplateConfigToExtendedTemplateConfig,\n  patchDashboardTemplate,\n} from '../../api/dashboard-templates';\nimport useCurrentUser from '../../hooks/useCurrentUser';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { debounce, isEqual } from 'lodash';\n\nexport const dropping_elem_id = '__dropping-elem__';\n\nexport const breakpoints = { xl: 1100, lg: 996, md: 768, sm: 480 };\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst getResizeHandle = (resizeHandleAxis: string, ref: React.Ref<HTMLDivElement>) => {\n  return (\n    <div ref={ref} className={`react-resizable-handle react-resizable-handle-${resizeHandleAxis}`}>\n      <img src={ResizeHandleIcon} />\n    </div>\n  );\n};\n\nconst GridLayout = ({ isLayoutLocked = false }: { isLayoutLocked?: boolean }) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [isInitialRender, setIsInitialRender] = useState(true);\n  const [layout, setLayout] = useAtom(layoutAtom);\n  const [prevLayout, setPrevLayout] = useAtom(prevLayoutAtom);\n  const [layoutVariant, setLayoutVariant] = useAtom(layoutVariantAtom);\n  const [template, setTemplate] = useAtom(templateAtom);\n  const [templateId, setTemplateId] = useAtom(templateIdAtom);\n  const [activeItem, setActiveItem] = useAtom(activeItemAtom);\n  const layoutRef = useRef<HTMLDivElement>(null);\n  const { currentToken } = useCurrentUser();\n  const dispatch = useDispatch();\n\n  const [currentDropInItem, setCurrentDropInItem] = useAtom(currentDropInItemAtom);\n  const droppingItemTemplate: ReactGridLayoutProps['droppingItem'] = useMemo(() => {\n    if (currentDropInItem) {\n      return {\n        i: dropping_elem_id,\n        w: widgetDefaultWidth[currentDropInItem],\n        h: widgetDefaultHeight[currentDropInItem],\n        widgetType: currentDropInItem,\n        title: 'New title',\n      };\n    }\n  }, [currentDropInItem]);\n\n  const setWidgetAttribute: SetWidgetAttribute = (id, attributeName, value) => {\n    setLayout((prev) => prev.map((item) => (item.i === id ? { ...item, [attributeName]: value } : item)));\n  };\n\n  const removeWidget = (id: string) => {\n    setLayout((prev) => prev.filter((item) => item.i !== id));\n  };\n\n  const onDrop: ReactGridLayoutProps['onDrop'] = (_layout: ExtendedLayoutItem[], layoutItem: ExtendedLayoutItem, event: DragEvent) => {\n    const data = event.dataTransfer?.getData('text') || '';\n    // fix placement order\n    if (isWidgetType(data)) {\n      const newWidget = {\n        ...layoutItem,\n        // w: layoutItem.x + layoutItem.w > 3 ? 1 : 3,\n        // x: 4 % layoutItem.w,\n        // x: layoutItem.x + layoutItem.w > 3 ? 3 : 0,\n        h: widgetDefaultHeight[data],\n        maxH: widgetMaxHeight[data],\n        minH: widgetMinHeight[data],\n        widgetType: data,\n        i: `${data}#${Date.now() + Math.random()}`,\n        title: 'New title',\n      };\n      setCurrentDropInItem(undefined);\n      setLayout((prev) =>\n        prev.reduce<ExtendedLayoutItem[]>(\n          (acc, curr) => {\n            if (curr.x + curr.w > newWidget.x && curr.y + curr.h <= newWidget.y) {\n              acc.push(curr);\n            } else {\n              // Wee need to push the current items down on the Y axis if they are supposed to be below the new widget\n              acc.push({ ...curr, y: curr.y + curr.h });\n            }\n\n            return acc;\n          },\n          [newWidget]\n        )\n      );\n    }\n    event.preventDefault();\n  };\n\n  const activeLayout = useMemo(\n    () =>\n      layout.map((item) => ({\n        ...item,\n        locked: isLayoutLocked ? isLayoutLocked : item.locked,\n      })),\n    [isLayoutLocked, layout]\n  );\n\n  const onLayoutChange: ResponsiveProps['onLayoutChange'] = useCallback(\n    (currentLayout: Layout[]) => {\n      if (isInitialRender) {\n        setIsInitialRender(false);\n        return;\n      }\n      if (isLayoutLocked || templateId < 0 || !layoutVariant || currentDropInItem) {\n        return;\n      }\n      // TODO in certain scenarios prevLayout contains additional undefined metadata on each widget causing this check to fail and multiple patches for dropping widgets in\n      if (isEqual(prevLayout, layout)) {\n        return;\n      }\n      const data = mapPartialExtendedTemplateConfigToPartialTemplateConfig({ [layoutVariant]: currentLayout });\n      patchDashboardTemplate(templateId, { templateConfig: data }, currentToken)\n        .then((template: DashboardTemplate) => {\n          const extendedTemplateConfig = mapTemplateConfigToExtendedTemplateConfig(template.templateConfig);\n          setTemplate(extendedTemplateConfig);\n          setPrevLayout(layout);\n          setLayout(extendedTemplateConfig[layoutVariant]);\n        })\n        .catch((err) => {\n          console.error(err);\n          dispatch(\n            addNotification({\n              variant: 'danger',\n              title: 'Failed to patch dashboard configuration',\n              description: 'Your dashboard changes were unable to be saved.',\n            })\n          );\n        });\n    },\n    [isLayoutLocked, templateId, layoutVariant, currentToken, layout, currentDropInItem, isInitialRender]\n  );\n\n  const debouncedOnLayoutChange = debounce(onLayoutChange, 500);\n\n  const onBreakpointChange: ResponsiveProps['onBreakpointChange'] = (newBreakpoint) => {\n    setLayoutVariant(newBreakpoint as Variants);\n  };\n\n  const onKeyUp = (event: KeyboardEvent<HTMLDivElement>, id: string) => {\n    if (event.code === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      setActiveItem((prev) => {\n        if (prev === id) {\n          return undefined;\n        }\n        return id;\n      });\n    }\n  };\n\n  const handleArrows = useCallback(\n    (e: globalThis.KeyboardEvent) => {\n      if (!activeItem) {\n        return;\n      }\n\n      const item = layout.find(({ i }) => i === activeItem);\n      if (!item) {\n        return;\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (e.code === 'ArrowUp') {\n        setLayout((prev) =>\n          prev.map((layoutItem) => {\n            if (layoutItem.i === activeItem) {\n              return {\n                ...layoutItem,\n                y: Math.max(layoutItem.y - 1, 0),\n              };\n            }\n            return layoutItem;\n          })\n        );\n      }\n\n      if (e.code === 'ArrowDown') {\n        setLayout((prev) =>\n          prev.map((layoutItem) => {\n            if (layoutItem.i === activeItem) {\n              return {\n                ...layoutItem,\n                y: layoutItem.y + 1,\n              };\n            }\n            return layoutItem;\n          })\n        );\n      }\n\n      if (e.code === 'ArrowLeft') {\n        setLayout((prev) =>\n          prev.map((layoutItem) => {\n            if (layoutItem.i === activeItem) {\n              return {\n                ...layoutItem,\n                x: Math.max(layoutItem.x - 1, 0),\n              };\n            }\n            return layoutItem;\n          })\n        );\n      }\n\n      if (e.code === 'ArrowRight') {\n        setLayout((prev) =>\n          prev.map((layoutItem) => {\n            if (layoutItem.i === activeItem) {\n              return {\n                ...layoutItem,\n                x: layoutItem.x + 1,\n              };\n            }\n            return layoutItem;\n          })\n        );\n      }\n    },\n    [activeItem]\n  );\n\n  useEffect(() => {\n    if (activeItem && layoutRef.current) {\n      layoutRef.current.addEventListener('keydown', handleArrows);\n    }\n    return () => {\n      layoutRef.current?.removeEventListener('keydown', handleArrows);\n    };\n  }, [activeItem]);\n\n  useEffect(() => {\n    if (!currentToken || templateId >= 0) {\n      return;\n    }\n    // TODO template type should be pulled from app config for reusability\n    getDashboardTemplates(currentToken, 'landingPage')\n      .then((templates) => {\n        const defaultTemplate = getDefaultTemplate(templates);\n        if (!defaultTemplate) {\n          throw new Error('No default template found');\n        }\n        const extendedTemplateConfig = mapTemplateConfigToExtendedTemplateConfig(defaultTemplate.templateConfig);\n        const currentWidth = layoutRef?.current?.clientWidth || document.body.clientWidth;\n        let targetVariant: Variants;\n        if (currentWidth > breakpoints.lg) {\n          targetVariant = 'xl';\n        } else if (breakpoints.lg >= currentWidth && currentWidth > breakpoints.md) {\n          targetVariant = 'lg';\n        } else if (breakpoints.md >= currentWidth && currentWidth > breakpoints.sm) {\n          targetVariant = 'md';\n        } else {\n          targetVariant = 'sm';\n        }\n        setTemplate(extendedTemplateConfig);\n        setTemplateId(defaultTemplate.id);\n        setLayout(extendedTemplateConfig[targetVariant]);\n        setLayoutVariant(targetVariant);\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          addNotification({\n            variant: 'danger',\n            title: 'Failed to fetch dashboard template',\n            description: 'Try reloading the page.',\n          })\n        );\n      });\n  }, [currentToken, templateId]);\n\n  return (\n    // {/* relative position is required for the grid layout to properly calculate\n    // child translation while dragging is in progress */}\n    <div style={{ position: 'relative' }} ref={layoutRef}>\n      <ResponsiveGridLayout\n        className=\"layout\"\n        draggableHandle=\".drag-handle\"\n        layouts={template}\n        breakpoints={breakpoints}\n        cols={{ xl: 4, lg: 3, md: 2, sm: 1 }}\n        rowHeight={88}\n        //width={1200}\n        isDraggable={!isLayoutLocked}\n        isResizable={!isLayoutLocked}\n        resizeHandle={getResizeHandle}\n        margin={{ xl: [16, 16], lg: [16, 16], md: [16, 16], sm: [16, 16] }}\n        resizeHandles={['sw', 'nw', 'se', 'ne']}\n        // add droppping item default based on dragged template\n        droppingItem={droppingItemTemplate}\n        isDroppable={!isLayoutLocked}\n        onDrop={onDrop}\n        useCSSTransforms\n        verticalCompact\n        onLayoutChange={debouncedOnLayoutChange}\n        onBreakpointChange={onBreakpointChange}\n      >\n        {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          activeLayout.map(({ widgetType, title, ...rest }, index) => (\n            <div\n              key={rest.i}\n              data-grid={rest}\n              onKeyUp={(e) => onKeyUp(e, rest.i)}\n              tabIndex={index}\n              style={{\n                boxShadow: activeItem === rest.i ? '0 0 2px 2px #2684FF' : 'none',\n                ...(activeItem === rest.i ? { outline: 'none' } : {}),\n              }}\n            >\n              <GridTile\n                isDragging={isDragging}\n                setIsDragging={setIsDragging}\n                title={rest.i}\n                widgetType={widgetType}\n                // these will be dynamically calculated once the dimensions are calculated\n                widgetConfig={{ ...rest, colWidth: 1200 / 4 }}\n                setWidgetAttribute={setWidgetAttribute}\n                removeWidget={removeWidget}\n              >\n                {rest.i}\n              </GridTile>\n            </div>\n          ))\n        }\n      </ResponsiveGridLayout>\n    </div>\n  );\n};\n\nexport default GridLayout;\n","import React from 'react';\n\nconst LargeWidget = ({ children }: React.PropsWithChildren<object>) => {\n  return <>{children}</>;\n};\n\nexport default LargeWidget;\n","import React from 'react';\n\nconst MediumWidget = ({ children }: React.PropsWithChildren<object>) => {\n  return <>{children}</>;\n};\n\nexport default MediumWidget;\n","import React from 'react';\n\nconst SmallWidget = ({ children }: React.PropsWithChildren<object>) => {\n  return <>{children}</>;\n};\n\nexport default SmallWidget;\n","export enum WidgetTypes {\n  LargeWidget = 'LargeWidget',\n  MediumWidget = 'MediumWidget',\n  SmallWidget = 'SmallWidget',\n}\n\nexport function isWidgetType(type: string): type is WidgetTypes {\n  return Object.values(WidgetTypes).includes(type as WidgetTypes);\n}\n","import { useEffect, useState } from 'react';\n\nconst useLoaded = (loader: () => Promise<void>) => {\n  const [isLoaded, setLoaded] = useState(false);\n  useEffect(() => {\n    (async () => {\n      await loader();\n      setLoaded(true);\n    })();\n  }, []);\n\n  return isLoaded;\n};\n\nexport default useLoaded;\n","import { useState } from 'react';\nimport useLoaded from './useLoaded';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { ChromeUser } from '@redhat-cloud-services/types';\n\nconst useCurrentUser = () => {\n  const [currentUser, setCurrentUser] = useState<ChromeUser['identity']['user']>(undefined);\n  const [currentToken, setCurrentToken] = useState<string>('');\n  const chrome = useChrome();\n\n  const isLoaded = useLoaded(async () => {\n    const user = await chrome.auth.getUser();\n    if (user) {\n      setCurrentUser(user.identity.user);\n    }\n    const token = await chrome.auth.getToken();\n    if (token) {\n      setCurrentToken(token);\n    }\n  });\n\n  return {\n    isLoaded,\n    currentUser,\n    currentToken,\n  };\n};\n\nexport default useCurrentUser;\n","import { atom } from 'jotai';\nimport { WidgetTypes } from '../Components/Widgets/widgetTypes';\n\nexport const currentDropInItemAtom = atom<WidgetTypes | undefined>(undefined);\n","import { isEqual } from 'lodash';\nimport { atom } from 'jotai';\nimport { ExtendedLayoutItem, Variants } from '../api/dashboard-templates';\n\nexport const initialLayout: ExtendedLayoutItem[] = [];\n\nexport function isDefaultLayout(layout: ExtendedLayoutItem[]) {\n  return isEqual(initialLayout, layout);\n}\n\nexport const layoutVariantAtom = atom<Variants>('xl');\n\nexport const layoutAtom = atom<ExtendedLayoutItem[]>(initialLayout);\n\nexport const prevLayoutAtom = atom<ExtendedLayoutItem[]>(initialLayout);\n\nexport const activeItemAtom = atom<string | undefined>(undefined);\n"],"names":["LargeWidget","MediumWidget","SmallWidget","widgetType","title","isDragging","setIsDragging","setWidgetAttribute","widgetConfig","removeWidget","useState","isOpen","setIsOpen","Component","Fragment","dropdownItems","useMemo","isMaximized","h","maxH","isMinimized","minH","DropdownItem","onClick","i","static","icon","isDisabled","Icon","className","status","undefined","HelperText","HelperTextItem","variant","headerActions","Tooltip","content","Dropdown","popperProps","appendTo","document","body","maxWidth","position","toggle","toggleRef","MenuToggle","ref","isExpanded","prev","onOpenChange","DropdownList","onMouseDown","onMouseUp","clsx","c","dragging","style","fill","Card","CardHeader","actions","Flex","CardTitle","userSelect","Divider","CardBody","widgetDefaultWidth","widgetDefaultHeight","widgetMaxHeight","widgetMinHeight","templateAtom","atom","sm","md","lg","xl","templateIdAtom","getRequestHeaders","token","Accept","Authorization","message","response","Object","defineProperty","value","name","configurable","Error","captureStackTrace","constructor","stack","handleErrors","resp","ok","DashboardTemplatesError","mapWidgetDefaults","id","split","mapLayoutWithTitleToExtendedLayout","layoutWithTitle","mapTemplateConfigToExtendedTemplateConfig","templateConfig","result","keys","forEach","key","map","mapExtendedLayoutToLayoutWithTitle","extendedLayoutItem","x","y","w","breakpoints","ResponsiveGridLayout","WidthProvider","Responsive","getResizeHandle","resizeHandleAxis","src","isLayoutLocked","isInitialRender","setIsInitialRender","useAtom","layoutAtom","layout","setLayout","prevLayout","setPrevLayout","layoutVariant","setLayoutVariant","template","setTemplate","templateId","setTemplateId","activeItem","setActiveItem","layoutRef","useRef","currentToken","useCurrentUser","dispatch","useDispatch","currentDropInItemAtom","currentDropInItem","setCurrentDropInItem","droppingItemTemplate","attributeName","item","filter","activeLayout","locked","onLayoutChange","useCallback","currentLayout","isEqual","extendedTemplateConfig","data","Promise","fetch","method","headers","JSON","stringify","json","patchDashboardTemplate","then","catch","err","console","error","description","debouncedOnLayoutChange","debounce","handleArrows","e","find","stopPropagation","preventDefault","code","layoutItem","Math","max","useEffect","current","addEventListener","removeEventListener","type","getDashboardTemplates","templates","defaultTemplate","itm","default","getDefaultTemplate","targetVariant","currentWidth","clientWidth","log","draggableHandle","layouts","cols","rowHeight","isDraggable","isResizable","resizeHandle","margin","resizeHandles","droppingItem","isDroppable","onDrop","_layout","event","dataTransfer","getData","Date","now","random","reduce","acc","curr","push","useCSSTransforms","verticalCompact","onBreakpointChange","newBreakpoint","index","rest","onKeyUp","tabIndex","boxShadow","outline","colWidth","children","WidgetTypes","isWidgetType","values","includes","loader","isLoaded","setLoaded","currentUser","setCurrentUser","setCurrentToken","chrome","useChrome","auth","getUser","user","identity","getToken","initialLayout","isDefaultLayout","layoutVariantAtom","prevLayoutAtom","activeItemAtom"],"sourceRoot":""}