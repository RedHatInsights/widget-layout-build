{"version":3,"file":"js/164.cec6bd7aa28697543d96.js","mappings":"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","sources":["webpack:///./src/Components/DnDLayout/GridTile.tsx","webpack:///./src/Components/Widgets/widgetTypes.ts","webpack:///./src/state/templateAtom.ts","webpack:///./src/Components/DnDLayout/GridLayout.tsx","webpack:///./src/Components/Widgets/widgetDefaults.tsx","webpack:///./src/api/dashboard-templates.ts","webpack:///./src/hooks/useLoaded.ts","webpack:///./src/hooks/useCurrentUser.ts","webpack:///./src/state/currentDropInItemAtom.ts","webpack:///./src/state/layoutAtom.ts","webpack:///./src/state/widgetMappingAtom.ts"],"sourcesContent":["import {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Divider,\n  Dropdown,\n  DropdownItem,\n  DropdownList,\n  Flex,\n  HelperText,\n  HelperTextItem,\n  Icon,\n  MenuToggle,\n  MenuToggleElement,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { CompressIcon, EllipsisVIcon, ExpandIcon, GripVerticalIcon, LockIcon, MinusCircleIcon, UnlockIcon } from '@patternfly/react-icons';\nimport React, { Fragment, useMemo, useState } from 'react';\nimport clsx from 'clsx';\n\nimport './GridTile.scss';\nimport { Layout } from 'react-grid-layout';\nimport { ExtendedLayoutItem, WidgetConfiguration } from '../../api/dashboard-templates';\nimport { widgetMappingAtom } from '../../state/widgetMappingAtom';\nimport { BaconIcon } from '@patternfly/react-icons';\nimport { getWidget } from '../Widgets/widgetDefaults';\nimport { useAtomValue } from 'jotai';\nimport classNames from 'classnames';\n\nexport type SetWidgetAttribute = <T extends string | number | boolean>(id: string, attributeName: keyof ExtendedLayoutItem, value: T) => void;\n\nexport type GridTileProps = React.PropsWithChildren<{\n  widgetType: string;\n  title: string;\n  setIsDragging: (isDragging: boolean) => void;\n  isDragging: boolean;\n  setWidgetAttribute: SetWidgetAttribute;\n  widgetConfig: Layout & {\n    colWidth: number;\n    locked?: boolean;\n    config?: WidgetConfiguration;\n  };\n  removeWidget: (id: string) => void;\n}>;\n\nconst GridTile = ({ widgetType, title, isDragging, setIsDragging, setWidgetAttribute, widgetConfig, removeWidget }: GridTileProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const widgetMapping = useAtomValue(widgetMappingAtom);\n  const { headerLink } = widgetConfig.config || {};\n  const hasHeader = headerLink && headerLink.href && headerLink.title;\n\n  const { node, module, scope } = useMemo(() => {\n    return getWidget(widgetMapping, widgetType);\n  }, [widgetMapping, widgetType]);\n\n  const dropdownItems = useMemo(() => {\n    const isMaximized = widgetConfig.h === widgetConfig.maxH;\n    const isMinimized = widgetConfig.h === widgetConfig.minH;\n    return (\n      <>\n        <DropdownItem\n          onClick={() => {\n            setIsOpen(false);\n            setWidgetAttribute(widgetConfig.i, 'static', !widgetConfig.static);\n          }}\n          icon={widgetConfig.static ? <UnlockIcon /> : <LockIcon />}\n        >\n          {widgetConfig.static ? 'Unlock location and size' : 'Lock location and size'}\n        </DropdownItem>\n        <DropdownItem\n          isDisabled={isMaximized || widgetConfig.static}\n          onClick={() => {\n            setWidgetAttribute(widgetConfig.i, 'h', widgetConfig.maxH ?? widgetConfig.h);\n            setIsOpen(false);\n          }}\n          icon={<ExpandIcon />}\n        >\n          Autosize height to content\n        </DropdownItem>\n        <DropdownItem\n          onClick={() => {\n            setWidgetAttribute(widgetConfig.i, 'h', widgetConfig.minH ?? widgetConfig.h);\n            setIsOpen(false);\n          }}\n          isDisabled={isMinimized || widgetConfig.static}\n          icon={<CompressIcon />}\n        >\n          Minimize height\n        </DropdownItem>\n        <DropdownItem\n          onClick={() => {\n            removeWidget(widgetConfig.i);\n          }}\n          icon={\n            <Icon className=\"pf-v5-u-pb-2xl\" status={widgetConfig.static ? undefined : 'danger'}>\n              <MinusCircleIcon />\n            </Icon>\n          }\n          isDisabled={widgetConfig.static}\n        >\n          Remove\n          <HelperText>\n            <HelperTextItem className=\"pf-v5-u-text-wrap\" variant=\"indeterminate\">\n              {\"All 'removed' widgets can be added back by clicking the 'Add widgets' button.\"}\n            </HelperTextItem>\n          </HelperText>\n        </DropdownItem>\n      </>\n    );\n  }, [widgetConfig.minH, widgetConfig.maxH, widgetConfig.h, widgetConfig.i, widgetConfig.static, setWidgetAttribute]);\n\n  const headerActions = (\n    <>\n      <Tooltip content={<p>Actions</p>}>\n        <Dropdown\n          popperProps={{\n            appendTo: document.body,\n            maxWidth: '300px',\n            position: 'right',\n          }}\n          toggle={(toggleRef: React.Ref<MenuToggleElement>) => (\n            <MenuToggle\n              ref={toggleRef}\n              isExpanded={isOpen}\n              onClick={() => setIsOpen((prev) => !prev)}\n              variant=\"plain\"\n              aria-label=\"Card title inline with images and actions example kebab toggle\"\n            >\n              <EllipsisVIcon aria-hidden=\"true\" />\n            </MenuToggle>\n          )}\n          isOpen={isOpen}\n          onOpenChange={(isOpen: boolean) => setIsOpen(isOpen)}\n        >\n          <DropdownList>{dropdownItems}</DropdownList>\n        </Dropdown>\n      </Tooltip>\n      <Tooltip content={<p>{widgetConfig.static ? 'Widget locked' : 'Move'}</p>}>\n        <Icon\n          onMouseDown={() => setIsDragging(true)}\n          onMouseUp={() => setIsDragging(false)}\n          className={clsx('drag-handle', {\n            dragging: isDragging,\n          })}\n        >\n          <GripVerticalIcon style={{ fill: '#6a6e73' }} />\n        </Icon>\n      </Tooltip>\n    </>\n  );\n\n  return (\n    <Card\n      className={clsx('grid-tile', {\n        static: widgetConfig.static,\n        [scope]: scope && module,\n      })}\n    >\n      <CardHeader actions={{ actions: headerActions }}>\n        <Flex className=\"pf-v5-u-flex-direction-row pf-v5-u-flex-nowrap\">\n          <Icon status=\"custom\" className=\"pf-v5-u-mr-sm\">\n            <BaconIcon />\n          </Icon>\n          <CardTitle\n            style={{\n              userSelect: isDragging ? 'none' : 'auto',\n            }}\n            className=\"pf-v5-u-flex-wrap pf-v5-u-text-break-word\"\n          >\n            {title}\n          </CardTitle>\n          {hasHeader && (\n            <Button className=\"widget-header-link pf-v5-u-p-0\" variant=\"link\" onClick={() => window.open(headerLink.href, '_blank')}>\n              {headerLink.title}\n            </Button>\n          )}\n        </Flex>\n      </CardHeader>\n      <Divider />\n      <CardBody\n        className={classNames('pf-v5-u-p-0', {\n          [`${scope}-${module}`]: scope && module,\n        })}\n      >\n        {node}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default GridTile;\n","import { WidgetMapping } from '../../api/dashboard-templates';\n\nexport function isWidgetType(widgetMapping: WidgetMapping, type: string): boolean {\n  return Object.keys(widgetMapping).includes(type);\n}\n","import { atom } from 'jotai';\nimport { ExtendedTemplateConfig } from '../api/dashboard-templates';\n\nexport const initialTemplate: ExtendedTemplateConfig = { sm: [], md: [], lg: [], xl: [] };\n\nexport const templateAtom = atom<ExtendedTemplateConfig>(initialTemplate);\n\nexport const templateIdAtom = atom<number>(-1);\n","import 'react-grid-layout/css/styles.css';\nimport './GridLayout.scss';\nimport { Layout, ReactGridLayoutProps, Responsive, ResponsiveProps, WidthProvider } from 'react-grid-layout';\nimport ResizeHandleIcon from './resize-handle.svg';\nimport GridTile, { SetWidgetAttribute } from './GridTile';\nimport { KeyboardEvent, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { isWidgetType } from '../Widgets/widgetTypes';\nimport { useAtom, useAtomValue } from 'jotai';\nimport { currentDropInItemAtom } from '../../state/currentDropInItemAtom';\nimport { widgetMappingAtom } from '../../state/widgetMappingAtom';\nimport { activeItemAtom, layoutAtom, layoutVariantAtom, prevLayoutAtom } from '../../state/layoutAtom';\nimport { templateAtom, templateIdAtom } from '../../state/templateAtom';\nimport React from 'react';\nimport {\n  DashboardTemplate,\n  ExtendedLayoutItem,\n  Variants,\n  getDashboardTemplates,\n  getDefaultTemplate,\n  getWidgetIdentifier,\n  mapPartialExtendedTemplateConfigToPartialTemplateConfig,\n  mapTemplateConfigToExtendedTemplateConfig,\n  patchDashboardTemplate,\n} from '../../api/dashboard-templates';\nimport useCurrentUser from '../../hooks/useCurrentUser';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { debounce, isEqual } from 'lodash';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateActions,\n  EmptyStateBody,\n  EmptyStateHeader,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  PageSection,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, GripVerticalIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { getWidget } from '../Widgets/widgetDefaults';\n\nexport const dropping_elem_id = '__dropping-elem__';\n\nexport const breakpoints = { xl: 1100, lg: 996, md: 768, sm: 480 };\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst getResizeHandle = (resizeHandleAxis: string, ref: React.Ref<HTMLDivElement>) => {\n  return (\n    <div ref={ref} className={`react-resizable-handle react-resizable-handle-${resizeHandleAxis}`}>\n      <img src={ResizeHandleIcon} />\n    </div>\n  );\n};\n\nconst LayoutEmptyState = () => {\n  return (\n    <PageSection className=\"empty-layout pf-v5-u-p-0\">\n      <EmptyState variant={EmptyStateVariant.lg} className=\"pf-v5-u-p-sm\">\n        <EmptyStateHeader titleText=\"No dashboard content\" headingLevel=\"h2\" icon={<EmptyStateIcon icon={PlusCircleIcon} />} />\n        <EmptyStateBody>\n          You don’t have any widgets on your dashboard. To populate your dashboard, drag <GripVerticalIcon /> items from the blue widget bank to this\n          dashboard body here.\n        </EmptyStateBody>\n        {/* TODO: Add link to documentation once available [HCCDOC-2108]\n        <EmptyStateActions>\n          <Button variant=\"link\" icon={<ExternalLinkAltIcon />} iconPosition=\"end\" component=\"a\" href={`#`}>\n            Learn about your widget dashboard\n          </Button>\n        </EmptyStateActions> */}\n      </EmptyState>\n    </PageSection>\n  );\n};\n\nconst GridLayout = ({ isLayoutLocked = false }: { isLayoutLocked?: boolean }) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [isInitialRender, setIsInitialRender] = useState(true);\n  const [layout, setLayout] = useAtom(layoutAtom);\n  const [prevLayout, setPrevLayout] = useAtom(prevLayoutAtom);\n  const [layoutVariant, setLayoutVariant] = useAtom(layoutVariantAtom);\n  const [template, setTemplate] = useAtom(templateAtom);\n  const [templateId, setTemplateId] = useAtom(templateIdAtom);\n  const [activeItem, setActiveItem] = useAtom(activeItemAtom);\n  const layoutRef = useRef<HTMLDivElement>(null);\n  const { currentToken } = useCurrentUser();\n  const widgetMapping = useAtomValue(widgetMappingAtom);\n  const dispatch = useDispatch();\n\n  const [currentDropInItem, setCurrentDropInItem] = useAtom(currentDropInItemAtom);\n  const droppingItemTemplate: ReactGridLayoutProps['droppingItem'] = useMemo(() => {\n    if (currentDropInItem && isWidgetType(widgetMapping, currentDropInItem)) {\n      return {\n        ...widgetMapping[currentDropInItem].defaults,\n        i: dropping_elem_id,\n        widgetType: currentDropInItem,\n        title: 'New title',\n        config: widgetMapping[currentDropInItem].config,\n      };\n    }\n  }, [currentDropInItem]);\n\n  const setWidgetAttribute: SetWidgetAttribute = (id, attributeName, value) => {\n    setLayout((prev) => prev.map((item) => (item.i === id ? { ...item, [attributeName]: value } : item)));\n  };\n\n  const removeWidget = (id: string) => {\n    setLayout((prev) => prev.filter((item) => item.i !== id));\n  };\n\n  const onDrop: ReactGridLayoutProps['onDrop'] = (_layout: ExtendedLayoutItem[], layoutItem: ExtendedLayoutItem, event: DragEvent) => {\n    const data = event.dataTransfer?.getData('text') || '';\n    // fix placement order\n    if (isWidgetType(widgetMapping, data)) {\n      const newWidget = {\n        ...layoutItem,\n        ...widgetMapping[data].defaults,\n        // w: layoutItem.x + layoutItem.w > 3 ? 1 : 3,\n        // x: 4 % layoutItem.w,\n        // x: layoutItem.x + layoutItem.w > 3 ? 3 : 0,\n        widgetType: data,\n        i: getWidgetIdentifier(data),\n        title: 'New title',\n        config: widgetMapping[data].config,\n      };\n      setCurrentDropInItem(undefined);\n      setLayout((prev) =>\n        prev.reduce<ExtendedLayoutItem[]>(\n          (acc, curr) => {\n            if (curr.x + curr.w > newWidget.x && curr.y + curr.h <= newWidget.y) {\n              acc.push(curr);\n            } else {\n              // Wee need to push the current items down on the Y axis if they are supposed to be below the new widget\n              acc.push({ ...curr, y: curr.y + curr.h });\n            }\n\n            return acc;\n          },\n          [newWidget]\n        )\n      );\n    }\n    event.preventDefault();\n  };\n\n  const activeLayout = useMemo(\n    () =>\n      layout.map((item) => ({\n        ...item,\n        locked: isLayoutLocked ? isLayoutLocked : item.locked,\n      })),\n    [isLayoutLocked, layout]\n  );\n\n  const onLayoutChange: ResponsiveProps['onLayoutChange'] = useCallback(\n    (currentLayout: Layout[]) => {\n      if (isInitialRender) {\n        setIsInitialRender(false);\n        return;\n      }\n      if (isLayoutLocked || templateId < 0 || !layoutVariant || currentDropInItem) {\n        return;\n      }\n      // TODO in certain scenarios prevLayout contains additional undefined metadata on each widget causing this check to fail and multiple patches for dropping widgets in\n      if (isEqual(prevLayout, layout)) {\n        return;\n      }\n      const data = mapPartialExtendedTemplateConfigToPartialTemplateConfig({ [layoutVariant]: currentLayout });\n      patchDashboardTemplate(templateId, { templateConfig: data }, currentToken)\n        .then((template: DashboardTemplate) => {\n          const extendedTemplateConfig = mapTemplateConfigToExtendedTemplateConfig(template.templateConfig);\n          setTemplate(extendedTemplateConfig);\n          setPrevLayout(layout);\n          setLayout(extendedTemplateConfig[layoutVariant]);\n        })\n        .catch((err) => {\n          console.error(err);\n          dispatch(\n            addNotification({\n              variant: 'danger',\n              title: 'Failed to patch dashboard configuration',\n              description: 'Your dashboard changes were unable to be saved.',\n            })\n          );\n        });\n    },\n    [isLayoutLocked, templateId, layoutVariant, currentToken, layout, currentDropInItem, isInitialRender]\n  );\n\n  const debouncedOnLayoutChange = debounce(onLayoutChange, 500);\n\n  const onBreakpointChange: ResponsiveProps['onBreakpointChange'] = (newBreakpoint) => {\n    setLayoutVariant(newBreakpoint as Variants);\n  };\n\n  const onKeyUp = (event: KeyboardEvent<HTMLDivElement>, id: string) => {\n    if (event.code === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      setActiveItem((prev) => {\n        if (prev === id) {\n          return undefined;\n        }\n        return id;\n      });\n    }\n  };\n\n  const handleArrows = useCallback(\n    (e: globalThis.KeyboardEvent) => {\n      if (!activeItem) {\n        return;\n      }\n\n      const item = layout.find(({ i }) => i === activeItem);\n      if (!item) {\n        return;\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (e.code === 'ArrowUp') {\n        setLayout((prev) =>\n          prev.map((layoutItem) => {\n            if (layoutItem.i === activeItem) {\n              return {\n                ...layoutItem,\n                y: Math.max(layoutItem.y - 1, 0),\n              };\n            }\n            return layoutItem;\n          })\n        );\n      }\n\n      if (e.code === 'ArrowDown') {\n        setLayout((prev) =>\n          prev.map((layoutItem) => {\n            if (layoutItem.i === activeItem) {\n              return {\n                ...layoutItem,\n                y: layoutItem.y + 1,\n              };\n            }\n            return layoutItem;\n          })\n        );\n      }\n\n      if (e.code === 'ArrowLeft') {\n        setLayout((prev) =>\n          prev.map((layoutItem) => {\n            if (layoutItem.i === activeItem) {\n              return {\n                ...layoutItem,\n                x: Math.max(layoutItem.x - 1, 0),\n              };\n            }\n            return layoutItem;\n          })\n        );\n      }\n\n      if (e.code === 'ArrowRight') {\n        setLayout((prev) =>\n          prev.map((layoutItem) => {\n            if (layoutItem.i === activeItem) {\n              return {\n                ...layoutItem,\n                x: layoutItem.x + 1,\n              };\n            }\n            return layoutItem;\n          })\n        );\n      }\n    },\n    [activeItem]\n  );\n\n  useEffect(() => {\n    if (activeItem && layoutRef.current) {\n      layoutRef.current.addEventListener('keydown', handleArrows);\n    }\n    return () => {\n      layoutRef.current?.removeEventListener('keydown', handleArrows);\n    };\n  }, [activeItem]);\n\n  useEffect(() => {\n    if (!currentToken || templateId >= 0) {\n      return;\n    }\n    // TODO template type should be pulled from app config for reusability\n    getDashboardTemplates(currentToken, 'landingPage')\n      .then((templates) => {\n        const defaultTemplate = getDefaultTemplate(templates);\n        if (!defaultTemplate) {\n          throw new Error('No default template found');\n        }\n        const extendedTemplateConfig = mapTemplateConfigToExtendedTemplateConfig(defaultTemplate.templateConfig);\n        const currentWidth = layoutRef?.current?.clientWidth || document.body.clientWidth;\n        let targetVariant: Variants;\n        if (currentWidth > breakpoints.lg) {\n          targetVariant = 'xl';\n        } else if (breakpoints.lg >= currentWidth && currentWidth > breakpoints.md) {\n          targetVariant = 'lg';\n        } else if (breakpoints.md >= currentWidth && currentWidth > breakpoints.sm) {\n          targetVariant = 'md';\n        } else {\n          targetVariant = 'sm';\n        }\n        setTemplate(extendedTemplateConfig);\n        setTemplateId(defaultTemplate.id);\n        setLayout(extendedTemplateConfig[targetVariant]);\n        setLayoutVariant(targetVariant);\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          addNotification({\n            variant: 'danger',\n            title: 'Failed to fetch dashboard template',\n            description: 'Try reloading the page.',\n          })\n        );\n      });\n  }, [currentToken, templateId]);\n\n  return (\n    // {/* relative position is required for the grid layout to properly calculate\n    // child translation while dragging is in progress */}\n    <div style={{ position: 'relative' }} ref={layoutRef}>\n      {activeLayout.length === 0 && !currentDropInItem && <LayoutEmptyState />}\n      <ResponsiveGridLayout\n        className=\"layout\"\n        draggableHandle=\".drag-handle\"\n        layouts={template}\n        breakpoints={breakpoints}\n        cols={{ xl: 4, lg: 3, md: 2, sm: 1 }}\n        rowHeight={88}\n        //width={1200}\n        isDraggable={!isLayoutLocked}\n        isResizable={!isLayoutLocked}\n        resizeHandle={getResizeHandle}\n        containerPadding={{ xl: [0, 0], lg: [0, 0], md: [0, 0], sm: [0, 0] }}\n        margin={{ xl: [16, 16], lg: [16, 16], md: [16, 16], sm: [16, 16] }}\n        resizeHandles={['sw', 'nw', 'se', 'ne']}\n        // add droppping item default based on dragged template\n        droppingItem={droppingItemTemplate}\n        isDroppable={!isLayoutLocked}\n        onDrop={onDrop}\n        useCSSTransforms\n        verticalCompact\n        onLayoutChange={debouncedOnLayoutChange}\n        onBreakpointChange={onBreakpointChange}\n      >\n        {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          activeLayout.map(({ widgetType, title, ...rest }, index) => {\n            const { config } = getWidget(widgetMapping, widgetType);\n            return (\n              <div\n                key={rest.i}\n                data-grid={rest}\n                onKeyUp={(e) => onKeyUp(e, rest.i)}\n                tabIndex={index}\n                style={{\n                  boxShadow: activeItem === rest.i ? '0 0 2px 2px #2684FF' : 'none',\n                  ...(activeItem === rest.i ? { outline: 'none' } : {}),\n                }}\n              >\n                <GridTile\n                  isDragging={isDragging}\n                  setIsDragging={setIsDragging}\n                  title={rest.i}\n                  widgetType={widgetType}\n                  // these will be dynamically calculated once the dimensions are calculated\n                  widgetConfig={{ ...rest, colWidth: 1200 / 4, config }}\n                  setWidgetAttribute={setWidgetAttribute}\n                  removeWidget={removeWidget}\n                >\n                  {rest.i}\n                </GridTile>\n              </div>\n            );\n          })\n        }\n      </ResponsiveGridLayout>\n    </div>\n  );\n};\n\nexport default GridLayout;\n","import { ScalprumComponent } from '@scalprum/react-core';\nimport { WidgetMapping } from '../../api/dashboard-templates';\nimport React, { Fragment } from 'react';\n\nexport const getWidget = (widgetMapping: WidgetMapping, type: string) => {\n  const mappedWidget = widgetMapping[type];\n  return {\n    node: mappedWidget ? <ScalprumComponent {...mappedWidget} /> : <Fragment />,\n    scope: mappedWidget?.scope,\n    module: mappedWidget?.module,\n    importName: mappedWidget?.importName,\n    config: mappedWidget?.config,\n  };\n};\n","import { Layout } from 'react-grid-layout';\nimport { dropping_elem_id } from '../Components/DnDLayout/GridLayout';\nimport { ScalprumComponentProps } from '@scalprum/react-core';\n\nconst getRequestHeaders = (token: string) => ({\n  Accept: 'application/json',\n  Authorization: `Bearer ${token}`,\n  'Content-Type': 'application/json',\n});\n\nexport const widgetIdSeparator = '#';\n\nexport type LayoutTypes = 'landingPage';\n\nexport type Variants = 'sm' | 'md' | 'lg' | 'xl';\n\nexport type LayoutWithTitle = Layout & { title: string };\n\nexport type TemplateConfig = {\n  [k in Variants]: LayoutWithTitle[];\n};\n\nexport type PartialTemplateConfig = Partial<TemplateConfig>;\n\n// extended type the UI tracks but not the backend\nexport type ExtendedLayoutItem = LayoutWithTitle & {\n  widgetType: string;\n  config?: WidgetConfiguration;\n  locked?: boolean;\n};\n\n// extended type the UI tracks but not the backend\nexport type ExtendedTemplateConfig = {\n  [k in Variants]: ExtendedLayoutItem[];\n};\n\n// extended type the UI tracks but not the backend\nexport type PartialExtendedTemplateConfig = Partial<ExtendedTemplateConfig>;\n\nexport type BaseTemplate = {\n  name: string;\n  displayName: string;\n  templateConfig: TemplateConfig;\n};\n\nexport type DashboardTemplate = {\n  id: number;\n  createdAt: string;\n  updatedAt: string;\n  deletedAt: string | null;\n  userIdentityID: number;\n  default: boolean;\n  TemplateBase: {\n    name: string;\n    displayName: string;\n  };\n  templateConfig: TemplateConfig;\n};\n\n// TODO use dynamic-plugin-sdk CustomError as base class instead\nexport class DashboardTemplatesError extends Error {\n  constructor(message: string, readonly status: number, readonly response: Response) {\n    super(message);\n\n    Object.defineProperty(this, 'name', {\n      value: new.target.name,\n      configurable: true,\n    });\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n  }\n}\n\nexport type WidgetDefaults = {\n  w: number;\n  h: number;\n  maxH: number;\n  minH: number;\n};\n\nexport type WidgetHeaderLink = {\n  title?: string;\n  href?: string;\n};\n\nexport type WidgetConfiguration = {\n  icon?: string;\n  headerLink?: WidgetHeaderLink;\n};\n\nexport type WidgetMapping = {\n  [key: string]: Pick<ScalprumComponentProps, 'scope' | 'module' | 'importName'> & {\n    defaults: WidgetDefaults;\n    config?: WidgetConfiguration;\n  };\n};\n\nconst handleErrors = (resp: Response) => {\n  if (!resp.ok) {\n    throw new DashboardTemplatesError('chrome-service dashboard-templates API fetch error', resp.status, resp);\n  }\n};\n\nexport const getWidgetIdentifier = (widgetType: string, uniqueId: string = crypto.randomUUID()) => {\n  return `${widgetType}${widgetIdSeparator}${uniqueId}`;\n};\n\nexport async function getBaseDashboardTemplate(token: string): Promise<BaseTemplate[]>;\nexport async function getBaseDashboardTemplate(token: string, type: LayoutTypes): Promise<BaseTemplate>;\nexport async function getBaseDashboardTemplate(token: string, type?: LayoutTypes): Promise<BaseTemplate | BaseTemplate[]> {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates/base-template${type ? `?dashboard=${type}` : ''}`, {\n    method: 'GET',\n    headers: getRequestHeaders(token),\n  });\n  handleErrors(resp);\n  const json = await resp.json();\n  return json.data;\n}\n\n// Returns multiple templates for a user (user can have multiple template copies) - we will render the one marked default: true by default\nexport async function getDashboardTemplates(token: string): Promise<DashboardTemplate[]>;\nexport async function getDashboardTemplates(token: string, type: LayoutTypes): Promise<DashboardTemplate[]>;\nexport async function getDashboardTemplates(token: string, type?: LayoutTypes): Promise<DashboardTemplate | DashboardTemplate[]> {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates${type ? `?dashboard=${type}` : ''}`, {\n    method: 'GET',\n    headers: getRequestHeaders(token),\n  });\n  handleErrors(resp);\n  const json = await resp.json();\n  return json.data;\n}\n\nexport async function getWidgetMapping(token: string): Promise<WidgetMapping> {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates/widget-mapping`, {\n    method: 'GET',\n    headers: getRequestHeaders(token),\n  });\n  handleErrors(resp);\n  const json = await resp.json();\n  return json.data;\n}\n\nexport const patchDashboardTemplate = async (\n  templateId: DashboardTemplate['id'],\n  data: { templateConfig: PartialTemplateConfig },\n  token: string\n): Promise<DashboardTemplate> => {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates/${templateId}`, {\n    method: 'PATCH',\n    headers: getRequestHeaders(token),\n    body: JSON.stringify(data),\n  });\n  handleErrors(resp);\n  const json = await resp.json();\n  return json.data;\n};\n\nexport const deleteDashboardTemplate = async (templateId: DashboardTemplate['id'], token: string): Promise<boolean> => {\n  const resp = await fetch(`/api/chrome-service/v1/dashboard-templates/${templateId}`, {\n    method: 'DELETE',\n    headers: getRequestHeaders(token),\n  });\n  handleErrors(resp);\n  return resp.status === 204;\n};\n\nexport const getDefaultTemplate = (templates: DashboardTemplate[]): DashboardTemplate | undefined => {\n  return templates.find((itm) => itm.default === true);\n};\n\nexport const mapWidgetDefaults = (id: string): [string, string] => {\n  const [widgetType, i] = id.split(widgetIdSeparator);\n  return [widgetType, i];\n};\n\nexport const mapLayoutWithTitleToExtendedLayout = (layoutWithTitle: LayoutWithTitle): ExtendedLayoutItem => {\n  return {\n    ...layoutWithTitle,\n    widgetType: mapWidgetDefaults(layoutWithTitle.i)[0],\n  };\n};\n\nexport const mapTemplateConfigToExtendedTemplateConfig = (templateConfig: TemplateConfig): ExtendedTemplateConfig => {\n  const result: ExtendedTemplateConfig = { sm: [], md: [], lg: [], xl: [] };\n  (Object.keys(templateConfig) as Variants[]).forEach((key) => {\n    result[key] = templateConfig[key].map(mapLayoutWithTitleToExtendedLayout);\n  });\n  return result;\n};\n\nexport const mapExtendedLayoutToLayoutWithTitle = (extendedLayoutItem: ExtendedLayoutItem): LayoutWithTitle => {\n  const { x, y, h, i, w, title, maxH, minH, static: isStatic } = extendedLayoutItem;\n  return { x, y, h, i, w, title, maxH, minH, static: isStatic };\n};\n\nexport const mapExtendedTemplateConfigToTemplateConfig = (extendedTemplateConfig: ExtendedTemplateConfig): TemplateConfig => {\n  const result: TemplateConfig = { sm: [], md: [], lg: [], xl: [] };\n  (Object.keys(extendedTemplateConfig) as Variants[]).forEach((key) => {\n    result[key] = extendedTemplateConfig[key].map(mapExtendedLayoutToLayoutWithTitle).filter(({ i }) => i !== dropping_elem_id);\n  });\n  return result;\n};\n\nexport const mapPartialExtendedTemplateConfigToPartialTemplateConfig = (\n  extendedTemplateConfig: PartialExtendedTemplateConfig\n): PartialTemplateConfig => {\n  const result: PartialTemplateConfig = {};\n  (Object.keys(extendedTemplateConfig) as Variants[]).forEach((key) => {\n    result[key] = extendedTemplateConfig[key]?.map(mapExtendedLayoutToLayoutWithTitle).filter(({ i }) => i !== dropping_elem_id);\n  });\n  return result;\n};\n","import { useEffect, useState } from 'react';\n\nconst useLoaded = (loader: () => Promise<void>) => {\n  const [isLoaded, setLoaded] = useState(false);\n  useEffect(() => {\n    (async () => {\n      await loader();\n      setLoaded(true);\n    })();\n  }, []);\n\n  return isLoaded;\n};\n\nexport default useLoaded;\n","import { useState } from 'react';\nimport useLoaded from './useLoaded';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { ChromeUser } from '@redhat-cloud-services/types';\n\nconst useCurrentUser = () => {\n  const [currentUser, setCurrentUser] = useState<ChromeUser['identity']['user']>(undefined);\n  const [currentToken, setCurrentToken] = useState<string>('');\n  const chrome = useChrome();\n\n  const isLoaded = useLoaded(async () => {\n    const user = await chrome.auth.getUser();\n    if (user) {\n      setCurrentUser(user.identity.user);\n    }\n    const token = await chrome.auth.getToken();\n    if (token) {\n      setCurrentToken(token);\n    }\n  });\n\n  return {\n    isLoaded,\n    currentUser,\n    currentToken,\n  };\n};\n\nexport default useCurrentUser;\n","import { atom } from 'jotai';\n\nexport const currentDropInItemAtom = atom<string | undefined>(undefined);\n","import { isEqual } from 'lodash';\nimport { atom } from 'jotai';\nimport { ExtendedLayoutItem, Variants } from '../api/dashboard-templates';\n\nexport const initialLayout: ExtendedLayoutItem[] = [];\n\nexport function isDefaultLayout(layout: ExtendedLayoutItem[]) {\n  return isEqual(initialLayout, layout);\n}\n\nexport const layoutVariantAtom = atom<Variants>('xl');\n\nexport const layoutAtom = atom<ExtendedLayoutItem[]>(initialLayout);\n\nexport const prevLayoutAtom = atom<ExtendedLayoutItem[]>(initialLayout);\n\nexport const activeItemAtom = atom<string | undefined>(undefined);\n","import { atom } from 'jotai';\nimport type { WidgetMapping } from '../api/dashboard-templates';\n\nexport const widgetMappingAtom = atom<WidgetMapping>({});\n"],"names":["widgetType","title","isDragging","setIsDragging","setWidgetAttribute","widgetConfig","removeWidget","useState","isOpen","setIsOpen","widgetMapping","useAtomValue","widgetMappingAtom","headerLink","config","hasHeader","href","useMemo","node","module","scope","dropdownItems","isMaximized","h","maxH","isMinimized","minH","DropdownItem","onClick","i","static","icon","isDisabled","Icon","className","status","undefined","HelperText","HelperTextItem","variant","headerActions","Tooltip","content","Dropdown","popperProps","appendTo","document","body","maxWidth","position","toggle","toggleRef","MenuToggle","ref","isExpanded","prev","onOpenChange","DropdownList","onMouseDown","onMouseUp","clsx","c","dragging","style","fill","Card","CardHeader","actions","Flex","CardTitle","userSelect","Button","window","open","Divider","CardBody","isWidgetType","type","Object","keys","includes","templateAtom","atom","sm","md","lg","xl","templateIdAtom","dropping_elem_id","breakpoints","ResponsiveGridLayout","WidthProvider","Responsive","getResizeHandle","resizeHandleAxis","src","LayoutEmptyState","PageSection","EmptyState","EmptyStateVariant","EmptyStateHeader","titleText","headingLevel","EmptyStateIcon","EmptyStateBody","isLayoutLocked","isInitialRender","setIsInitialRender","useAtom","layoutAtom","layout","setLayout","prevLayout","setPrevLayout","layoutVariant","setLayoutVariant","template","setTemplate","templateId","setTemplateId","activeItem","setActiveItem","layoutRef","useRef","currentToken","useCurrentUser","dispatch","useDispatch","currentDropInItemAtom","currentDropInItem","setCurrentDropInItem","droppingItemTemplate","defaults","id","attributeName","value","map","item","filter","activeLayout","locked","onLayoutChange","useCallback","currentLayout","isEqual","data","templateConfig","then","extendedTemplateConfig","catch","err","console","error","description","debouncedOnLayoutChange","debounce","handleArrows","e","find","stopPropagation","preventDefault","code","layoutItem","y","Math","max","x","useEffect","current","addEventListener","removeEventListener","templates","defaultTemplate","Error","targetVariant","currentWidth","clientWidth","log","length","draggableHandle","layouts","cols","rowHeight","isDraggable","isResizable","resizeHandle","containerPadding","margin","resizeHandles","droppingItem","isDroppable","onDrop","_layout","event","dataTransfer","getData","reduce","acc","curr","w","push","useCSSTransforms","verticalCompact","onBreakpointChange","newBreakpoint","index","rest","key","onKeyUp","tabIndex","boxShadow","outline","colWidth","getWidget","mappedWidget","ScalprumComponent","Fragment","importName","getRequestHeaders","token","Accept","Authorization","message","response","defineProperty","name","configurable","captureStackTrace","constructor","stack","handleErrors","resp","ok","DashboardTemplatesError","getWidgetIdentifier","uniqueId","crypto","randomUUID","getDashboardTemplates","Promise","fetch","method","headers","json","getWidgetMapping","patchDashboardTemplate","JSON","stringify","getDefaultTemplate","itm","default","mapLayoutWithTitleToExtendedLayout","layoutWithTitle","split","mapTemplateConfigToExtendedTemplateConfig","result","forEach","mapExtendedLayoutToLayoutWithTitle","extendedLayoutItem","mapPartialExtendedTemplateConfigToPartialTemplateConfig","loader","isLoaded","setLoaded","currentUser","setCurrentUser","setCurrentToken","chrome","useChrome","auth","getUser","user","identity","getToken","initialLayout","isDefaultLayout","layoutVariantAtom","prevLayoutAtom","activeItemAtom"],"sourceRoot":""}