{"version":3,"file":"js/904.b7be3f38bc9bbbd77479.js","mappings":"kHAEIA,EAAI,EAAQ,OAEdC,EAAQ,EAAaD,EAAEE,WACDF,EAAEG,W,ivDC4E1B,QAlEqB,SAACC,GACpB,IAAMC,GAAiB,IAAAC,cAAaC,EAAA,GAC9BC,GAAgB,IAAAF,cAAaG,EAAA,IAC7BC,GAAqB,UACrBC,GAAmB,IAAAC,YAAWC,EAAA,GAC5BC,GAAgB,EAAAC,EAAA,KAAgB,YAChCC,GAAwB,EAAAC,EAAA,KAAW,oBA+C3C,OA1BA,IAAAC,YAAU,WACHJ,GAIgB,mC,0DACH,UAAM,W,cAAhBK,EAAU,UAGS,GAAMC,OAAOC,QAAQF,GAASG,QAAO,SAAOC,EAAK,G,IAACC,EAAG,KAAEC,EAAK,K,sGAC7D,SAAMF,G,cAApBG,EAAc,UACdC,EAAeF,EAAMG,SACYD,EAAaE,YAAc,IA/B1CA,EA+BiEF,EAAaE,YA/B/C,gBAAGC,SAAO,W,kDAC7C,SAAMA,QAAQC,IACtCF,EAAYG,KAAI,SAAOC,GAAU,0C,yFAErBC,EAAiBD,EAAU,OAAnBE,EAASF,EAAU,KAC/BjB,EAAoBkB,IAAkD,mBAAhClB,EAAoBkB,GAClC,GAAOlB,EAAoBkB,GAAO,MAA3BlB,EAA6EmB,GAAQ,KADpH,M,OAEF,MAAO,CAAP,EAD0B,U,OAG5B,MAAO,CAAP,GAAO,G,OAGP,O,WADAC,QAAQC,MAAM,6BAA8B,GACrC,CAAP,GAAO,G,oCAIb,MAAO,CAAP,EAf0B,SAeDC,MAAMC,U,SAeF,M,cAA2C,W,aAAmD,K,iBAIrH,OAJuB,IAErBb,EAAYF,GAAOC,GAEd,CAAP,EAAOF,GAnCU,IAAOM,C,SAoCvBC,QAAQU,QAAQ,CAAC,KATlB,M,OACIC,EAAiB,SAUvB9B,EAAiB8B,G,iCAKvB,GAAG,CAAC3B,IAGF,yBAAK4B,UAAU,gBACb,kBAACC,EAAA,EAAM,CAACnC,cAAeA,EAAeE,mBAAoBA,IAC1D,kBAACkC,EAAA,EAAM,MACP,kBAAC,IAAe,CAACC,aAAa,GAC5B,kBAAC,EAAAC,YAAW,CAACJ,UAAU,mEACrB,kBAACK,EAAA,EAAU,GAAC1C,eAAgBA,GAAoBD,MAK1D,ECxEA,EAJY,WACV,OAAO,kBAAC4C,EAAY,KACtB,ECDA,IAAMC,EAAOC,SAASC,eAAe,QACjCF,IACgB,OAAWA,GACnBG,OAAO,mBCJF,WAAM,yBAAC,EAAG,KAAJ,GDIK,M","sources":["webpack:///./node_modules/react-dom/client.js","webpack:///./src/Routes/Default/Default.tsx","webpack:///./src/App.tsx","webpack:///./src/bootstrap.tsx","webpack:///./src/AppEntry.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { PageSection } from '@patternfly/react-core';\nimport AddWidgetDrawer from '../../Components/WidgetDrawer/WidgetDrawer';\nimport GridLayout from '../../Components/DnDLayout/GridLayout';\nimport { useAtomValue, useSetAtom } from 'jotai';\nimport { lockedLayoutAtom } from '../../state/lockedLayoutAtom';\nimport { notificationsAtom, useRemoveNotification } from '../../state/notificationsAtom';\nimport Header from '../../Components/Header/Header';\nimport React, { useEffect } from 'react';\nimport useCurrentUser from '../../hooks/useCurrentUser';\nimport { LayoutTypes, WidgetPermission, getWidgetMapping } from '../../api/dashboard-templates';\nimport { widgetMappingAtom } from '../../state/widgetMappingAtom';\nimport '../../App.scss';\nimport Portal from '@redhat-cloud-services/frontend-components-notifications/Portal';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst DefaultRoute = (props: { layoutType?: LayoutTypes }) => {\n  const isLayoutLocked = useAtomValue(lockedLayoutAtom);\n  const notifications = useAtomValue(notificationsAtom);\n  const removeNotification = useRemoveNotification();\n  const setWidgetMapping = useSetAtom(widgetMappingAtom);\n  const { currentUser } = useCurrentUser();\n  const { visibilityFunctions } = useChrome();\n\n  const checkPermissions = async (permissions: WidgetPermission[]): Promise<boolean> => {\n    const permissionResults = await Promise.all(\n      permissions.map(async (permission) => {\n        try {\n          const { method, args } = permission;\n          if (visibilityFunctions[method] && typeof visibilityFunctions[method] === 'function') {\n            const permissionGranted = await (visibilityFunctions[method] as (...args: unknown[]) => Promise<boolean>)(...(args || []));\n            return permissionGranted;\n          }\n          return true;\n        } catch (error) {\n          console.error('Error checking permissions', error);\n          return false;\n        }\n      })\n    );\n    return permissionResults.every(Boolean);\n  };\n\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n\n    const getWidgetMap = async () => {\n      const mapping = await getWidgetMapping();\n\n      if (mapping) {\n        const checkedMapping = await Object.entries(mapping).reduce(async (acc, [key, value]) => {\n          const resolvedAcc = await acc;\n          const widgetConfig = value.config;\n          const hasPermissions = widgetConfig && widgetConfig.permissions ? await checkPermissions(widgetConfig.permissions) : true;\n          if (hasPermissions) {\n            resolvedAcc[key] = value;\n          }\n          return acc;\n        }, Promise.resolve({} as Record<string, (typeof mapping)[string]>));\n\n        setWidgetMapping(checkedMapping);\n      }\n    };\n\n    getWidgetMap();\n  }, [currentUser]);\n\n  return (\n    <div className=\"widgetLayout\">\n      <Portal notifications={notifications} removeNotification={removeNotification} />\n      <Header />\n      <AddWidgetDrawer dismissible={false}>\n        <PageSection className=\"widg-c-page__main-section--grid pf-v5-u-p-md pf-v5-u-p-lg-on-sm\">\n          <GridLayout isLayoutLocked={isLayoutLocked} {...props} />\n        </PageSection>\n      </AddWidgetDrawer>\n    </div>\n  );\n};\n\nexport default DefaultRoute;\n","import React from 'react';\nimport DefaultRoute from './Routes/Default/Default';\n\nconst App = () => {\n  return <DefaultRoute />;\n};\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport AppEntry from './AppEntry';\n\nconst root = document.getElementById('root');\nif (root) {\n  const reactRoot = createRoot(root);\n  reactRoot.render(<AppEntry />);\n}\n","import React from 'react';\nimport App from './App';\n\nconst AppEntry = () => <App />;\n\nexport default AppEntry;\n"],"names":["m","exports","createRoot","hydrateRoot","props","isLayoutLocked","useAtomValue","lockedLayoutAtom","notifications","notificationsAtom","removeNotification","setWidgetMapping","useSetAtom","widgetMappingAtom","currentUser","useCurrentUser","visibilityFunctions","useChrome","useEffect","mapping","Object","entries","reduce","acc","key","value","resolvedAcc","widgetConfig","config","permissions","Promise","all","map","permission","method","args","console","error","every","Boolean","resolve","checkedMapping","className","Portal","Header","dismissible","PageSection","GridLayout","Default","root","document","getElementById","render"],"sourceRoot":""}