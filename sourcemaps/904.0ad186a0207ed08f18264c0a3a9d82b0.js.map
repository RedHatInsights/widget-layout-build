{"version":3,"file":"js/904.8b918ca0cca0e03e7b2b.js","mappings":"kHAEIA,EAAI,EAAQ,OAEdC,EAAQ,EAAaD,EAAEE,WACDF,EAAEG,W,oYC0C1B,QAjCqB,SAACC,GACpB,IAAMC,GAAiB,IAAAC,cAAaC,EAAA,GAC9BC,GAAgB,IAAAF,cAAaG,EAAA,IAC7BC,GAAqB,UACrBC,GAAmB,IAAAC,YAAWC,EAAA,GAC5BC,GAAgB,EAAAC,EAAA,KAAgB,YAexC,OAbA,IAAAC,YAAU,W,YACHF,I,OAGgB,E,OAAA,E,EAAA,W,gnCACH,UAAM,W,cAAhBG,EAAU,WAEdN,EAAiBM,G,qBAHA,K,kQAOvB,GAAG,CAACH,IAGF,yBAAKI,UAAU,gBACb,kBAACC,EAAA,EAAM,CAACX,cAAeA,EAAeE,mBAAoBA,IAC1D,kBAACU,EAAA,EAAM,MACP,kBAAC,IAAe,CAACC,aAAa,GAC5B,kBAAC,EAAAC,YAAW,CAACJ,UAAU,mEACrB,kBAACK,EAAA,EAAU,GAAClB,eAAgBA,GAAoBD,MAK1D,ECtCA,EAJY,WACV,OAAO,kBAACoB,EAAY,KACtB,ECDA,IAAMC,EAAOC,SAASC,eAAe,QACjCF,IACgB,OAAWA,GACnBG,OAAO,mBCJF,WAAM,yBAAC,EAAG,KAAJ,GDIK,M","sources":["webpack:///./node_modules/react-dom/client.js","webpack:///./src/Routes/Default/Default.tsx","webpack:///./src/App.tsx","webpack:///./src/bootstrap.tsx","webpack:///./src/AppEntry.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { PageSection } from '@patternfly/react-core';\nimport AddWidgetDrawer from '../../Components/WidgetDrawer/WidgetDrawer';\nimport GridLayout from '../../Components/DnDLayout/GridLayout';\nimport { useAtomValue, useSetAtom } from 'jotai';\nimport { lockedLayoutAtom } from '../../state/lockedLayoutAtom';\nimport { notificationsAtom, useRemoveNotification } from '../../state/notificationsAtom';\nimport Header from '../../Components/Header/Header';\nimport React, { useEffect } from 'react';\nimport useCurrentUser from '../../hooks/useCurrentUser';\nimport { LayoutTypes, getWidgetMapping } from '../../api/dashboard-templates';\nimport { widgetMappingAtom } from '../../state/widgetMappingAtom';\nimport '../../App.scss';\nimport Portal from '@redhat-cloud-services/frontend-components-notifications/Portal';\n\nconst DefaultRoute = (props: { layoutType?: LayoutTypes }) => {\n  const isLayoutLocked = useAtomValue(lockedLayoutAtom);\n  const notifications = useAtomValue(notificationsAtom);\n  const removeNotification = useRemoveNotification();\n  const setWidgetMapping = useSetAtom(widgetMappingAtom);\n  const { currentUser } = useCurrentUser();\n\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    const getWidgetMap = async () => {\n      const mapping = await getWidgetMapping();\n      if (mapping) {\n        setWidgetMapping(mapping);\n      }\n    };\n    getWidgetMap();\n  }, [currentUser]);\n\n  return (\n    <div className=\"widgetLayout\">\n      <Portal notifications={notifications} removeNotification={removeNotification} />\n      <Header />\n      <AddWidgetDrawer dismissible={false}>\n        <PageSection className=\"widg-c-page__main-section--grid pf-v5-u-p-md pf-v5-u-p-lg-on-sm\">\n          <GridLayout isLayoutLocked={isLayoutLocked} {...props} />\n        </PageSection>\n      </AddWidgetDrawer>\n    </div>\n  );\n};\n\nexport default DefaultRoute;\n","import React from 'react';\nimport DefaultRoute from './Routes/Default/Default';\n\nconst App = () => {\n  return <DefaultRoute />;\n};\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport AppEntry from './AppEntry';\n\nconst root = document.getElementById('root');\nif (root) {\n  const reactRoot = createRoot(root);\n  reactRoot.render(<AppEntry />);\n}\n","import React from 'react';\nimport App from './App';\n\nconst AppEntry = () => <App />;\n\nexport default AppEntry;\n"],"names":["m","exports","createRoot","hydrateRoot","props","isLayoutLocked","useAtomValue","lockedLayoutAtom","notifications","notificationsAtom","removeNotification","setWidgetMapping","useSetAtom","widgetMappingAtom","currentUser","useCurrentUser","useEffect","mapping","className","Portal","Header","dismissible","PageSection","GridLayout","Default","root","document","getElementById","render"],"sourceRoot":""}