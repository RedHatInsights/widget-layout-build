{"version":3,"file":"js/904.c0e32aabe084dbaaa8d7.js","mappings":"kHAEIA,EAAI,EAAQ,OAEdC,EAAQ,EAAaD,EAAEE,WACDF,EAAEG,W,8HCInB,SAASC,I,IAAK,sDAEnB,OADW,QAAY,CAAC,E,+LAAG,CAAF,CAAG,KAAmB,EAAAC,EAAA,IAAwB,CAAEC,oBAAqB,CAAC,SAAU,YAAgBC,GAAU,GAErI,C,0BCPMC,GAAU,IAAAC,OAAK,WAAM,iEACrBC,GAAW,IAAAD,OAAK,WAAM,yCAiB5B,QAfe,WAAM,OACnB,kBAAC,EAAAE,SAAQ,CACPC,SACE,kBAAC,EAAAC,SAAQ,KACP,kBAAC,EAAAC,QAAO,QAIZ,kBAAC,SAAS,KACR,kBAAC,EAAAC,MAAK,CAACC,KAAK,IAAIC,QAAS,kBAACT,EAAO,QACjC,kBAAC,EAAAO,MAAK,CAACC,KAAK,IAAIC,QAAS,kBAACP,EAAQ,SAVnB,E,qCC0BrB,QAtBY,WACV,IAAMQ,GAAW,IAAAC,eACTC,GAAO,EAAAC,EAAA,KAAW,GAY1B,OAVA,IAAAC,YAAU,YACS,UACRC,SAAS,CAAEC,cAAe,OAEnC,IAAMC,EAAaL,EAAG,kBAAkB,SAACM,GAAU,OAAAR,EAAS,WAAIQ,EAAMC,OAAnB,IACnD,OAAO,WACLF,SAAAA,GACF,CACF,GAAG,IAGD,kBAAC,EAAAG,SAAQ,KACP,kBAAC,KAAmB,MACpB,kBAAC,EAAM,MAGb,E,SC5BA,IAAMC,EAAOC,SAASC,eAAe,QACjCF,IACgB,OAAWA,GACnBG,OAAO,mBCDF,WAAM,OACrB,kBAAC,KAAQ,CAACC,MAAO7B,EAAI,aAAwD,IAAK8B,YAChF,kBAAC,EAAG,MAFe,GDCK,M","sources":["webpack:///./node_modules/react-dom/client.js","webpack:///./src/store/index.ts","webpack:///./src/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/bootstrap.tsx","webpack:///./src/AppEntry.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { Middleware } from 'redux';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport let registry: ReducerRegistry<any>;\n\nexport function init(...middleware: Middleware[]) {\n  registry = getRegistry({}, [promiseMiddleware, notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }), ...middleware]);\n  return registry;\n}\n","import React, { Suspense, lazy } from 'react';\nimport { Routes as DomRoutes, Route } from 'react-router-dom';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Default = lazy(() => import(/* webpackChunkName: \"DefaultRoute\" */ './Routes/Default/Default'));\nconst NotFound = lazy(() => import(/* webpackCunkName: \"NotFound\" */ './Routes/404/404'));\n\nconst Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <DomRoutes>\n      <Route path=\"/\" element={<Default />} />\n      <Route path=\"*\" element={<NotFound />} />\n    </DomRoutes>\n  </Suspense>\n);\n\nexport default Routes;\n","import React, { Fragment, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Reducer } from 'redux';\n\nimport Routes from './Routes';\nimport './App.scss';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst App = () => {\n  const navigate = useNavigate();\n  const { on } = useChrome();\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer as Reducer });\n\n    const unregister = on('APP_NAVIGATION', (event) => navigate(`/${event.navId}`));\n    return () => {\n      unregister?.();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport AppEntry from './AppEntry';\n\nconst root = document.getElementById('root');\nif (root) {\n  const reactRoot = createRoot(root);\n  reactRoot.render(<AppEntry />);\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\nimport logger from 'redux-logger';\n\nconst AppEntry = () => (\n  <Provider store={init(...(process.env.NODE_ENV !== 'production' ? [logger] : [])).getStore()}>\n    <App />\n  </Provider>\n);\n\nexport default AppEntry;\n"],"names":["m","exports","createRoot","hydrateRoot","init","notificationsMiddleware","errorDescriptionKey","middleware","Default","lazy","NotFound","Suspense","fallback","Bullseye","Spinner","Route","path","element","navigate","useNavigate","on","useChrome","useEffect","register","notifications","unregister","event","navId","Fragment","root","document","getElementById","render","store","getStore"],"sourceRoot":""}